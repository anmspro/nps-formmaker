{"remainingRequest":"E:\\code\\vue-form-making\\node_modules\\babel-loader\\lib\\index.js!E:\\code\\vue-form-making\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\code\\vue-form-making\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\vue-form-making\\src\\components\\WidgetConfig.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\vue-form-making\\src\\components\\WidgetConfig.vue","mtime":1654427633765},{"path":"E:\\code\\vue-form-making\\package.json","mtime":1654423480823},{"path":"E:\\code\\vue-form-making\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653903169935},{"path":"E:\\code\\vue-form-making\\node_modules\\babel-loader\\lib\\index.js","mtime":1653803163997},{"path":"E:\\code\\vue-form-making\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653903169935},{"path":"E:\\code\\vue-form-making\\node_modules\\vue-loader\\lib\\index.js","mtime":1653903175370}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Draggable from 'vuedraggable';\nexport default {\n  components: {\n    Draggable: Draggable\n  },\n  props: ['data'],\n  data: function data() {\n    return {\n      validator: {\n        type: null,\n        required: null,\n        pattern: null,\n        range: null,\n        length: null\n      }\n    };\n  },\n  computed: {\n    show: function show() {\n      if (this.data && Object.keys(this.data).length > 0) {\n        return true;\n      }\n\n      return false;\n    }\n  },\n  methods: {\n    handleOptionsRemove: function handleOptionsRemove(index) {\n      if (this.data.type === 'grid') {\n        this.data.columns.splice(index, 1);\n      } else {\n        this.data.options.options.splice(index, 1);\n      }\n    },\n    handleAddOption: function handleAddOption() {\n      if (this.data.options.showLabel) {\n        this.data.options.options.push({\n          value: this.$t('fm.config.widget.newOption'),\n          label: this.$t('fm.config.widget.newOption')\n        });\n      } else {\n        this.data.options.options.push({\n          value: this.$t('fm.config.widget.newOption')\n        });\n      }\n    },\n    handleAddOptionNPS: function handleAddOptionNPS() {\n      if (this.data.options.showLabel) {\n        this.data.options.options.push({\n          // value: this.$t('fm.config.widget.newOptionNPS'),\n          // label: this.$t('fm.config.widget.newOptionNPS')\n          value: ++this.data.options.npsValue,\n          label: this.data.options.npsValue\n        });\n      } else {\n        this.data.options.options.push({\n          // value: this.$t('fm.config.widget.newOptionNPS')\n          value: ++this.data.options.npsValue // label: this.data.options.npsValue\n\n        });\n      }\n    },\n    handleAddColumn: function handleAddColumn() {\n      this.data.columns.push({\n        span: '',\n        list: []\n      });\n    },\n    generateRule: function generateRule() {\n      var _this = this;\n\n      this.data.rules = [];\n      Object.keys(this.validator).forEach(function (key) {\n        if (_this.validator[key]) {\n          _this.data.rules.push(_this.validator[key]);\n        }\n      });\n    },\n    handleSelectMuliple: function handleSelectMuliple(value) {\n      if (value) {\n        if (this.data.options.defaultValue) {\n          this.data.options.defaultValue = [this.data.options.defaultValue];\n        } else {\n          this.data.options.defaultValue = [];\n        }\n      } else {\n        if (this.data.options.defaultValue.length > 0) {\n          this.data.options.defaultValue = this.data.options.defaultValue[0];\n        } else {\n          this.data.options.defaultValue = '';\n        }\n      }\n    },\n    validateRequired: function validateRequired(val) {\n      var _this2 = this;\n\n      if (val) {\n        this.validator.required = {\n          required: true,\n          message: \"\".concat(this.data.name).concat(this.$t('fm.config.widget.validatorRequired'))\n        };\n      } else {\n        this.validator.required = null;\n      }\n\n      this.$nextTick(function () {\n        _this2.generateRule();\n      });\n    },\n    validateDataType: function validateDataType(val) {\n      if (!this.show) {\n        return false;\n      }\n\n      if (val) {\n        this.validator.type = {\n          type: val,\n          message: this.data.name + this.$t('fm.config.widget.validatorType')\n        };\n      } else {\n        this.validator.type = null;\n      }\n\n      this.generateRule();\n    },\n    valiatePattern: function valiatePattern(val) {\n      if (!this.show) {\n        return false;\n      }\n\n      if (val) {\n        this.validator.pattern = {\n          pattern: val,\n          message: this.data.name + this.$t('fm.config.widget.validatorPattern')\n        };\n      } else {\n        this.validator.pattern = null;\n      }\n\n      this.generateRule();\n    }\n  },\n  watch: {\n    'data.options.isRange': function dataOptionsIsRange(val) {\n      if (typeof val !== 'undefined') {\n        if (val) {\n          this.data.options.defaultValue = null;\n        } else {\n          if (Object.keys(this.data.options).indexOf('defaultValue') >= 0) this.data.options.defaultValue = '';\n        }\n      }\n    },\n    'data.options.required': function dataOptionsRequired(val) {\n      this.validateRequired(val);\n    },\n    'data.options.dataType': function dataOptionsDataType(val) {\n      this.validateDataType(val);\n    },\n    'data.options.pattern': function dataOptionsPattern(val) {\n      this.valiatePattern(val);\n    },\n    'data.name': function dataName(val) {\n      if (this.data.options) {\n        this.validateRequired(this.data.options.required);\n        this.validateDataType(this.data.options.dataType);\n        this.valiatePattern(this.data.options.pattern);\n      }\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyYA;AAEA;EACAA;IACAC;EADA,CADA;EAIAC,eAJA;EAKAC,IALA,kBAKA;IACA;MACAC;QACAC,UADA;QAEAC,cAFA;QAGAC,aAHA;QAIAC,WAJA;QAKAC;MALA;IADA;EASA,CAfA;EAgBAC;IACAC,IADA,kBACA;MACA;QACA;MACA;;MACA;IACA;EANA,CAhBA;EAwBAC;IACAC,mBADA,+BACAC,KADA,EACA;MACA;QACA;MACA,CAFA,MAEA;QACA;MACA;IAEA,CARA;IASAC,eATA,6BASA;MACA;QACA;UACAC,4CADA;UAEAC;QAFA;MAIA,CALA,MAKA;QACA;UACAD;QADA;MAGA;IAEA,CArBA;IAuBAE,kBAvBA,gCAuBA;MACA;QACA;UACA;UACA;UACAF,mCAHA;UAIAC;QAJA;MAMA,CAPA,MAOA;QACA;UACA;UACAD,mCAFA,CAGA;;QAHA;MAKA;IAEA,CAvCA;IAyCAG,eAzCA,6BAyCA;MACA;QACAC,QADA;QAEAC;MAFA;IAIA,CA9CA;IA+CAC,YA/CA,0BA+CA;MAAA;;MACA;MACAC;QACA;UACA;QACA;MACA,CAJA;IAKA,CAtDA;IAuDAC,mBAvDA,+BAuDAR,KAvDA,EAuDA;MACA;QACA;UACA;QACA,CAFA,MAEA;UACA;QACA;MAEA,CAPA,MAOA;QACA;UACA;QACA,CAFA,MAEA;UACA;QACA;MAEA;IACA,CAvEA;IAyEAS,gBAzEA,4BAyEAC,GAzEA,EAyEA;MAAA;;MACA;QACA;UAAApB;UAAAqB;QAAA;MACA,CAFA,MAEA;QACA;MACA;;MAEA;QACA;MACA,CAFA;IAGA,CAnFA;IAqFAC,gBArFA,4BAqFAF,GArFA,EAqFA;MACA;QACA;MACA;;MAEA;QACA;UAAArB;UAAAsB;QAAA;MACA,CAFA,MAEA;QACA;MACA;;MAEA;IACA,CAjGA;IAkGAE,cAlGA,0BAkGAH,GAlGA,EAkGA;MACA;QACA;MACA;;MAEA;QACA;UAAAnB;UAAAoB;QAAA;MACA,CAFA,MAEA;QACA;MACA;;MAEA;IACA;EA9GA,CAxBA;EAwIAG;IACA;MACA;QACA;UACA;QACA,CAFA,MAEA;UACA,iEACA;QACA;MACA;IACA,CAVA;IAWA;MACA;IACA,CAbA;IAcA;MACA;IACA,CAhBA;IAiBA;MACA;IACA,CAnBA;IAoBA;MACA;QACA;QACA;QACA;MACA;IACA;EA1BA;AAxIA","names":["components","Draggable","props","data","validator","type","required","pattern","range","length","computed","show","methods","handleOptionsRemove","index","handleAddOption","value","label","handleAddOptionNPS","handleAddColumn","span","list","generateRule","Object","handleSelectMuliple","validateRequired","val","message","validateDataType","valiatePattern","watch"],"sourceRoot":"src/components","sources":["WidgetConfig.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"show\">\r\n    <el-form label-position=\"top\">\r\n      <el-form-item :label=\"$t('fm.config.widget.model')\" v-if=\"data.type!='grid'\">\r\n        <el-input v-model=\"data.model\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('fm.config.widget.name')\" v-if=\"data.type!='grid'\">\r\n        <el-input v-model=\"data.name\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('fm.config.widget.width')\" v-if=\"Object.keys(data.options).indexOf('width')>=0\">\r\n        <el-input v-model=\"data.options.width\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item :label=\"$t('fm.config.widget.height')\" v-if=\"Object.keys(data.options).indexOf('height')>=0\">\r\n        <el-input v-model=\"data.options.height\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item :label=\"$t('fm.config.widget.showQuesTitle')\" v-if=\"Object.keys(data.options).indexOf('textValue')>=0\">\r\n        <!-- <el-input v-model=\"data.options.textValue\"></el-input> -->\r\n        <vue-editor v-model=\"data.options.textValue\"></vue-editor>\r\n      </el-form-item>\r\n\r\n      <el-form-item :label=\"$t('fm.config.widget.showDescTitle')\" v-if=\"Object.keys(data.options).indexOf('descriptionValue')>=0\">\r\n        <!-- <el-input v-model=\"data.options.descriptionValue\"></el-input> -->\r\n        <vue-editor v-model=\"data.options.descriptionValue\"></vue-editor>\r\n      </el-form-item>\r\n\r\n      <el-form-item :label=\"$t('fm.config.widget.size')\" v-if=\"Object.keys(data.options).indexOf('size')>=0\">\r\n        {{$t('fm.config.widget.width')}} <el-input style=\"width: 90px;\" type=\"number\" v-model.number=\"data.options.size.width\"></el-input>\r\n        {{$t('fm.config.widget.height')}} <el-input style=\"width: 90px;\" type=\"number\" v-model.number=\"data.options.size.height\"></el-input>\r\n      </el-form-item>\r\n      \r\n      <el-form-item :label=\"$t('fm.config.widget.placeholder')\" v-if=\"Object.keys(data.options).indexOf('placeholder')>=0 && (data.type!='time' || data.type!='date')\">\r\n        <el-input v-model=\"data.options.placeholder\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('fm.config.widget.layout')\" v-if=\"Object.keys(data.options).indexOf('inline')>=0\">\r\n        <el-radio-group v-model=\"data.options.inline\">\r\n          <el-radio-button :label=\"false\">{{$t('fm.config.widget.block')}}</el-radio-button>\r\n          <el-radio-button :label=\"true\">{{$t('fm.config.widget.inline')}}</el-radio-button>\r\n        </el-radio-group>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('fm.config.widget.showInput')\" v-if=\"Object.keys(data.options).indexOf('showInput')>=0\">\r\n        <el-switch v-model=\"data.options.showInput\" ></el-switch>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('fm.config.widget.min')\" v-if=\"Object.keys(data.options).indexOf('min')>=0\">\r\n        <el-input-number v-model=\"data.options.min\" :min=\"0\" :max=\"100\" :step=\"1\"></el-input-number>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('fm.config.widget.max')\" v-if=\"Object.keys(data.options).indexOf('max')>=0\">\r\n        <el-input-number v-model=\"data.options.max\" :min=\"0\" :max=\"100\" :step=\"1\"></el-input-number>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('fm.config.widget.step')\" v-if=\"Object.keys(data.options).indexOf('step')>=0\">\r\n        <el-input-number v-model=\"data.options.step\" :min=\"0\" :max=\"100\" :step=\"1\"></el-input-number>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('fm.config.widget.multiple')\" v-if=\"data.type=='select' || data.type=='imgupload'\">\r\n        <el-switch v-model=\"data.options.multiple\" @change=\"handleSelectMuliple\"></el-switch>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('fm.config.widget.filterable')\" v-if=\"data.type=='select'\">\r\n        <el-switch v-model=\"data.options.filterable\"></el-switch>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('fm.config.widget.allowHalf')\" v-if=\"Object.keys(data.options).indexOf('allowHalf')>=0\">\r\n        <el-switch\r\n            v-model=\"data.options.allowHalf\"\r\n          >\r\n          </el-switch>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('fm.config.widget.showAlpha')\" v-if=\"Object.keys(data.options).indexOf('showAlpha')>=0\">\r\n        <el-switch\r\n            v-model=\"data.options.showAlpha\"\r\n          >\r\n          </el-switch>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('fm.config.widget.showLabel')\" v-if=\"Object.keys(data.options).indexOf('showLabel')>=0\">\r\n        <el-switch\r\n            v-model=\"data.options.showLabel\"\r\n          >\r\n        </el-switch>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('fm.config.widget.option')\" v-if=\"Object.keys(data.options).indexOf('options')>=0\">\r\n        <el-radio-group v-model=\"data.options.remote\" size=\"mini\" style=\"margin-bottom:10px;\">\r\n          <el-radio-button :label=\"false\">{{$t('fm.config.widget.staticData')}}</el-radio-button>\r\n          <el-radio-button :label=\"true\">{{$t('fm.config.widget.remoteData')}}</el-radio-button>\r\n        </el-radio-group>\r\n        <template v-if=\"data.options.remote\">\r\n          <div>\r\n            <el-input size=\"mini\" style=\"\" v-model=\"data.options.remoteFunc\">\r\n              <template slot=\"prepend\">{{$t('fm.config.widget.remoteFunc')}}</template>\r\n            </el-input>\r\n            <el-input size=\"mini\" style=\"\" v-model=\"data.options.props.value\">\r\n              <template slot=\"prepend\">{{$t('fm.config.widget.value')}}</template>\r\n            </el-input>\r\n            <el-input size=\"mini\" style=\"\" v-model=\"data.options.props.label\">\r\n              <template slot=\"prepend\">{{$t('fm.config.widget.label')}}</template>\r\n            </el-input>\r\n          </div>\r\n        </template>\r\n        <template v-else>\r\n          <template v-if=\"data.type=='radio' || (data.type=='select'&&!data.options.multiple)\">\r\n            <el-radio-group v-model=\"data.options.defaultValue\">\r\n              <!-- -->\r\n              <draggable tag=\"ul\" :list=\"data.options.options\" \r\n                v-bind=\"{group:{ name:'options'}, ghostClass: 'ghost',handle: '.drag-item'}\"\r\n                handle=\".drag-item\"\r\n              >\r\n                <li v-for=\"(item, index) in data.options.options\" :key=\"index\" >\r\n                  <el-radio\r\n                    :label=\"item.value\" \r\n                    style=\"margin-right: 5px;\"\r\n                  >\r\n                    <el-input :style=\"{'width': data.options.showLabel? '90px': '180px' }\" size=\"mini\" v-model=\"item.value\"></el-input>\r\n                    <el-input style=\"width:90px;\" size=\"mini\" v-if=\"data.options.showLabel\" v-model=\"item.label\"></el-input>\r\n                    <!-- <input v-model=\"item.value\"/> -->\r\n                  </el-radio>\r\n                  <i class=\"drag-item\" style=\"font-size: 16px;margin: 0 5px;cursor: move;\"><i class=\"iconfont icon-icon_bars\"></i></i>\r\n                  <el-button @click=\"handleOptionsRemove(index)\" circle plain type=\"danger\" size=\"mini\" icon=\"el-icon-minus\" style=\"padding: 4px;margin-left: 5px;\"></el-button>\r\n                  \r\n                </li>\r\n              </draggable>\r\n              \r\n            </el-radio-group>\r\n            <div style=\"margin-left: 22px;\">\r\n            <el-button type=\"text\" @click=\"handleAddOption\">{{$t('fm.actions.addOption')}}</el-button>\r\n            </div>\r\n          </template>\r\n\r\n          <template v-if=\"data.type == 'nps'\">\r\n            <!--\r\n            <el-input v-model=\"data.options.textValue\"></el-input>\r\n            <el-input v-model=\"data.options.descriptionValue\"></el-input>\r\n            \r\n            <vue-editor v-model=\"data.options.textValue\"></vue-editor>\r\n            <vue-editor v-model=\"data.options.descriptionValue\"></vue-editor>\r\n            <el-radio-group v-model=\"data.options.defaultValue\">\r\n              <!-- -->\r\n              <draggable tag=\"ul\" :list=\"data.options.options\" \r\n                v-bind=\"{group:{ name:'options'}, ghostClass: 'ghost',handle: '.drag-item'}\"\r\n                handle=\".drag-item\"\r\n              >\r\n                <li v-for=\"(item, index) in data.options.options\" :key=\"index\" >\r\n                  <el-radio\r\n                    :label=\"item.value\" \r\n                    style=\"margin-right: 5px;\"\r\n                  >\r\n                    <el-input :style=\"{'width': data.options.showLabel? '90px': '180px' }\" size=\"mini\" v-model=\"item.value\"></el-input>\r\n                    <el-input style=\"width:90px;\" size=\"mini\" v-if=\"data.options.showLabel\" v-model=\"item.label\"></el-input>\r\n                    <!-- <input v-model=\"item.value\"/> -->\r\n                  </el-radio>\r\n                  <i class=\"drag-item\" style=\"font-size: 16px;margin: 0 5px;cursor: move;\"><i class=\"iconfont icon-icon_bars\"></i></i>\r\n                  <el-button @click=\"handleOptionsRemove(index)\" circle plain type=\"danger\" size=\"mini\" icon=\"el-icon-minus\" style=\"padding: 4px;margin-left: 5px;\"></el-button>\r\n                  \r\n                </li>\r\n              </draggable>\r\n              \r\n            </el-radio-group>\r\n            <div style=\"margin-left: 22px;\">\r\n            <el-button type=\"text\" @click=\"handleAddOptionNPS\">{{$t('fm.actions.addOptionNPS')}}</el-button>\r\n            </div>\r\n          </template>\r\n\r\n          <template v-if=\"data.type=='checkbox' || (data.type=='select' && data.options.multiple)\">\r\n            <el-checkbox-group v-model=\"data.options.defaultValue\">\r\n\r\n              <draggable tag=\"ul\" :list=\"data.options.options\" \r\n                v-bind=\"{group:{ name:'options'}, ghostClass: 'ghost',handle: '.drag-item'}\"\r\n                handle=\".drag-item\"\r\n              >\r\n                <li v-for=\"(item, index) in data.options.options\" :key=\"index\" >\r\n                  <el-checkbox\r\n                    :label=\"item.value\"\r\n                    style=\"margin-right: 5px;\"\r\n                  >\r\n                    <el-input :style=\"{'width': data.options.showLabel? '90px': '180px' }\" size=\"mini\" v-model=\"item.value\"></el-input>\r\n                    <el-input style=\"width:90px;\" size=\"mini\" v-if=\"data.options.showLabel\" v-model=\"item.label\"></el-input>\r\n                  </el-checkbox>\r\n                  <i class=\"drag-item\" style=\"font-size: 16px;margin: 0 5px;cursor: move;\"><i class=\"iconfont icon-icon_bars\"></i></i>\r\n                  <el-button @click=\"handleOptionsRemove(index)\" circle plain type=\"danger\" size=\"mini\" icon=\"el-icon-minus\" style=\"padding: 4px;margin-left: 5px;\"></el-button>\r\n                  \r\n                </li>\r\n              </draggable>\r\n            </el-checkbox-group>\r\n            <div style=\"margin-left: 22px;\">\r\n            <el-button type=\"text\" @click=\"handleAddOption\">{{$t('fm.actions.addOption')}}</el-button>\r\n            </div>\r\n          </template>\r\n          <!-- <div style=\"margin-left: 22px;\">\r\n            <el-button type=\"text\" @click=\"handleAddOption\">{{$t('fm.actions.addOption')}}</el-button>\r\n          </div> -->\r\n        </template>\r\n        \r\n      </el-form-item>\r\n\r\n      <el-form-item :label=\"$t('fm.config.widget.remoteData')\" v-if=\"data.type=='cascader'\">\r\n        <div>\r\n          <el-input size=\"mini\" style=\"\" v-model=\"data.options.remoteFunc\">\r\n            <template slot=\"prepend\">{{$t('fm.config.widget.remoteFunc')}}</template>\r\n          </el-input>\r\n          <el-input size=\"mini\" style=\"\" v-model=\"data.options.props.value\">\r\n            <template slot=\"prepend\">{{$t('fm.config.widget.value')}}</template>\r\n          </el-input>\r\n          <el-input size=\"mini\" style=\"\" v-model=\"data.options.props.label\">\r\n            <template slot=\"prepend\">{{$t('fm.config.widget.label')}}</template>\r\n          </el-input>\r\n          <el-input size=\"mini\" style=\"\" v-model=\"data.options.props.children\">\r\n            <template slot=\"prepend\">{{$t('fm.config.widget.childrenOption')}}</template>\r\n          </el-input>\r\n        </div>\r\n      </el-form-item>\r\n\r\n      <el-form-item :label=\"$t('fm.config.widget.defaultValue')\" v-if=\"Object.keys(data.options).indexOf('defaultValue')>=0 && (data.type == 'textarea' || data.type == 'input' || data.type=='rate' || data.type=='color' || data.type=='switch' || data.type=='text')\">\r\n        <el-input v-if=\"data.type=='textarea'\" type=\"textarea\" :rows=\"5\" v-model=\"data.options.defaultValue\"></el-input>\r\n        <el-input v-if=\"data.type=='input'\" v-model=\"data.options.defaultValue\"></el-input>\r\n        <el-rate v-if=\"data.type == 'rate'\" style=\"display:inline-block;vertical-align: middle;\" :max=\"data.options.max\" :allow-half=\"data.options.allowHalf\" v-model=\"data.options.defaultValue\"></el-rate>\r\n        <el-button type=\"text\" v-if=\"data.type == 'rate'\" style=\"display:inline-block;vertical-align: middle;margin-left: 10px;\" @click=\"data.options.defaultValue=0\">{{$t('fm.actions.clear')}}</el-button>\r\n        <el-color-picker \r\n          v-if=\"data.type == 'color'\"\r\n          v-model=\"data.options.defaultValue\"\r\n          :show-alpha=\"data.options.showAlpha\"\r\n        ></el-color-picker>\r\n        <el-switch v-if=\"data.type=='switch'\" v-model=\"data.options.defaultValue\"></el-switch>\r\n        <el-input v-if=\"data.type=='text'\" v-model=\"data.options.defaultValue\"></el-input>\r\n      </el-form-item>\r\n\r\n      <template v-if=\"data.type == 'time' || data.type == 'date'\">\r\n        <el-form-item :label=\"$t('fm.config.widget.showType')\" v-if=\"data.type == 'date'\">\r\n          <el-select v-model=\"data.options.type\">\r\n            <el-option value=\"year\"></el-option>\r\n            <el-option value=\"month\"></el-option>\r\n            <el-option value=\"date\"></el-option>\r\n            <el-option value=\"dates\"></el-option>\r\n            <!-- <el-option value=\"week\"></el-option> -->\r\n            <el-option value=\"datetime\"></el-option>\r\n            <el-option value=\"datetimerange\"></el-option>\r\n            <el-option value=\"daterange\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item :label=\"$t('fm.config.widget.isRange')\" v-if=\"data.type == 'time'\">\r\n          <el-switch\r\n            v-model=\"data.options.isRange\"\r\n          >\r\n          </el-switch>\r\n        </el-form-item>\r\n        <el-form-item :label=\"$t('fm.config.widget.isTimestamp')\" v-if=\"data.type == 'date'\">\r\n          <el-switch\r\n            v-model=\"data.options.timestamp\"\r\n          >\r\n          </el-switch>\r\n        </el-form-item>\r\n        <el-form-item :label=\"$t('fm.config.widget.placeholder')\" v-if=\"(!data.options.isRange && data.type == 'time') || (data.type != 'time' && data.options.type != 'datetimerange' && data.options.type != 'daterange')\">\r\n          <el-input v-model=\"data.options.placeholder\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item :label=\"$t('fm.config.widget.startPlaceholder')\" v-if=\"(data.options.isRange) || data.options.type=='datetimerange' || data.options.type=='daterange'\">\r\n          <el-input v-model=\"data.options.startPlaceholder\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item :label=\"$t('fm.config.widget.endPlaceholder')\" v-if=\"data.options.isRange || data.options.type=='datetimerange' || data.options.type=='daterange'\">\r\n          <el-input v-model=\"data.options.endPlaceholder\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item :label=\"$t('fm.config.widget.format')\">\r\n          <el-input v-model=\"data.options.format\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item :label=\"$t('fm.config.widget.defaultValue')\" v-if=\"data.type=='time' && Object.keys(data.options).indexOf('isRange')>=0\">\r\n          <el-time-picker \r\n            key=\"1\"\r\n            style=\"width: 100%;\"\r\n            v-if=\"!data.options.isRange\"\r\n            v-model=\"data.options.defaultValue\"\r\n            :arrowControl=\"data.options.arrowControl\"\r\n            :value-format=\"data.options.format\"\r\n          >\r\n          </el-time-picker>\r\n          <el-time-picker \r\n            key=\"2\"\r\n            v-if=\"data.options.isRange\"\r\n            style=\"width: 100%;\"\r\n            v-model=\"data.options.defaultValue\"\r\n            is-range\r\n            :arrowControl=\"data.options.arrowControl\"\r\n            :value-format=\"data.options.format\"\r\n          >\r\n          </el-time-picker>\r\n        </el-form-item>\r\n      </template>\r\n\r\n      <template v-if=\"data.type=='imgupload'\">\r\n        \r\n        <el-form-item :label=\"$t('fm.config.widget.limit')\">\r\n          <el-input type=\"number\" v-model.number=\"data.options.length\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item :label=\"$t('fm.config.widget.isQiniu')\">\r\n          <el-switch v-model=\"data.options.isQiniu\"></el-switch>\r\n        </el-form-item>\r\n        <template v-if=\"data.options.isQiniu\">\r\n          <el-form-item label=\"Domain\" :required=\"true\">\r\n          <el-input v-model=\"data.options.domain\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item :label=\"$t('fm.config.widget.tokenFunc')\" :required=\"true\">\r\n            <el-input v-model=\"data.options.tokenFunc\"></el-input>\r\n          </el-form-item>\r\n        </template>\r\n        <template v-else>\r\n          <el-form-item :label=\"$t('fm.config.widget.imageAction')\" :required=\"true\">\r\n            <el-input v-model=\"data.options.action\"></el-input>\r\n          </el-form-item>\r\n        </template>\r\n      </template>\r\n\r\n      <template v-if=\"data.type=='blank'\">\r\n        <el-form-item :label=\"$t('fm.config.widget.defaultType')\">\r\n          <el-select v-model=\"data.options.defaultType\">\r\n            <el-option value=\"String\" :label=\"$t('fm.config.widget.string')\"></el-option>\r\n            <el-option value=\"Object\" :label=\"$t('fm.config.widget.object')\"></el-option>\r\n            <el-option value=\"Array\" :label=\"$t('fm.config.widget.array')\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </template>\r\n\r\n      <template v-if=\"data.type == 'grid'\">\r\n        <el-form-item :label=\"$t('fm.config.widget.gutter')\">\r\n          <el-input type=\"number\" v-model.number=\"data.options.gutter\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item :label=\"$t('fm.config.widget.columnOption')\">\r\n          <draggable tag=\"ul\" :list=\"data.columns\" \r\n            v-bind=\"{group:{ name:'options'}, ghostClass: 'ghost',handle: '.drag-item'}\"\r\n            handle=\".drag-item\"\r\n          >\r\n            <li v-for=\"(item, index) in data.columns\" :key=\"index\" >\r\n              <i class=\"drag-item\" style=\"font-size: 16px;margin: 0 5px;cursor: move;\"><i class=\"iconfont icon-icon_bars\"></i></i>\r\n              <el-input :placeholder=\"$t('fm.config.widget.span')\" size=\"mini\" style=\"width: 100px;\" type=\"number\" v-model.number=\"item.span\"></el-input>\r\n              \r\n              <el-button @click=\"handleOptionsRemove(index)\" circle plain type=\"danger\" size=\"mini\" icon=\"el-icon-minus\" style=\"padding: 4px;margin-left: 5px;\"></el-button>\r\n              \r\n            </li>\r\n          </draggable>\r\n          <div style=\"margin-left: 22px;\">\r\n            <el-button type=\"text\" @click=\"handleAddColumn\">{{$t('fm.actions.addColumn')}}</el-button>\r\n          </div>\r\n        </el-form-item>\r\n        <el-form-item :label=\"$t('fm.config.widget.justify')\">\r\n          <el-select v-model=\"data.options.justify\">\r\n            <el-option value=\"start\" :label=\"$t('fm.config.widget.justifyStart')\"></el-option>\r\n            <el-option value=\"end\" :label=\"$t('fm.config.widget.justifyEnd')\"></el-option>\r\n            <el-option value=\"center\" :label=\"$t('fm.config.widget.justifyCenter')\"></el-option>\r\n            <el-option value=\"space-around\" :label=\"$t('fm.config.widget.justifySpaceAround')\"></el-option>\r\n            <el-option value=\"space-between\" :label=\"$t('fm.config.widget.justifySpaceBetween')\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item :label=\"$t('fm.config.widget.align')\">\r\n          <el-select v-model=\"data.options.align\">\r\n            <el-option value=\"top\" :label=\"$t('fm.config.widget.alignTop')\"></el-option>\r\n            <el-option value=\"middle\" :label=\"$t('fm.config.widget.alignMiddle')\"></el-option>\r\n            <el-option value=\"bottom\" :label=\"$t('fm.config.widget.alignBottom')\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </template>\r\n      \r\n\r\n      <template v-if=\"data.type != 'grid'\">\r\n        <el-form-item :label=\"$t('fm.config.widget.attribute')\">\r\n          <el-checkbox v-model=\"data.options.readonly\" v-if=\"Object.keys(data.options).indexOf('readonly')>=0\">{{$t('fm.config.widget.readonly')}}</el-checkbox>\r\n          <el-checkbox v-model=\"data.options.disabled\" v-if=\"Object.keys(data.options).indexOf('disabled')>=0\">{{$t('fm.config.widget.disabled')}}\t</el-checkbox>\r\n          <el-checkbox v-model=\"data.options.editable\" v-if=\"Object.keys(data.options).indexOf('editable')>=0\">{{$t('fm.config.widget.editable')}}</el-checkbox>\r\n          <el-checkbox v-model=\"data.options.clearable\" v-if=\"Object.keys(data.options).indexOf('clearable')>=0\">{{$t('fm.config.widget.clearable')}} </el-checkbox>\r\n          <el-checkbox v-model=\"data.options.arrowControl\" v-if=\"Object.keys(data.options).indexOf('arrowControl')>=0\">{{$t('fm.config.widget.arrowControl')}}</el-checkbox>\r\n          <el-checkbox v-model=\"data.options.isDelete\" v-if=\"Object.keys(data.options).indexOf('isDelete')>=0\">{{$t('fm.config.widget.isDelete')}}</el-checkbox>\r\n          <el-checkbox v-model=\"data.options.isEdit\" v-if=\"Object.keys(data.options).indexOf('isEdit')>=0\">{{$t('fm.config.widget.isEdit')}}</el-checkbox>\r\n          \r\n        </el-form-item>\r\n        <el-form-item :label=\"$t('fm.config.widget.validate')\">\r\n          <div v-if=\"Object.keys(data.options).indexOf('required')>=0\">\r\n            <el-checkbox v-model=\"data.options.required\">{{$t('fm.config.widget.required')}}</el-checkbox>\r\n          </div>\r\n          <el-select v-if=\"Object.keys(data.options).indexOf('dataType')>=0\" v-model=\"data.options.dataType\" size=\"mini\" >\r\n            <el-option value=\"string\" :label=\"$t('fm.config.widget.string')\"></el-option>\r\n            <el-option value=\"number\" :label=\"$t('fm.config.widget.number')\"></el-option>\r\n            <el-option value=\"boolean\" :label=\"$t('fm.config.widget.boolean')\"></el-option>\r\n            <el-option value=\"integer\" :label=\"$t('fm.config.widget.integer')\"></el-option>\r\n            <el-option value=\"float\" :label=\"$t('fm.config.widget.float')\"></el-option>\r\n            <el-option value=\"url\" :label=\"$t('fm.config.widget.url')\"></el-option>\r\n            <el-option value=\"email\" :label=\"$t('fm.config.widget.email')\"></el-option>\r\n            <el-option value=\"hex\" :label=\"$t('fm.config.widget.hex')\"></el-option>\r\n          </el-select>\r\n          \r\n          <div v-if=\"Object.keys(data.options).indexOf('pattern')>=0\">\r\n            <el-input size=\"mini\" class=\"config-pattern-input\" v-model.lazy=\"data.options.pattern\"  style=\" width: 240px;\" :placeholder=\"$t('fm.config.widget.patternPlaceholder')\">\r\n              <template slot=\"prepend\" >/</template>\r\n              <template slot=\"append\" >/</template>\r\n            </el-input>\r\n          </div>\r\n        </el-form-item>\r\n      </template>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Draggable from 'vuedraggable'\r\n\r\nexport default {\r\n  components: {\r\n    Draggable\r\n  },\r\n  props: ['data'],\r\n  data () {\r\n    return {\r\n      validator: {\r\n        type: null,\r\n        required: null,\r\n        pattern: null,\r\n        range: null,\r\n        length: null\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    show () {\r\n      if (this.data && Object.keys(this.data).length > 0) {\r\n        return true\r\n      }\r\n      return false\r\n    }\r\n  },\r\n  methods: {\r\n    handleOptionsRemove (index) {\r\n      if (this.data.type === 'grid') {\r\n        this.data.columns.splice(index, 1)\r\n      } else {\r\n        this.data.options.options.splice(index, 1)\r\n      }\r\n      \r\n    },\r\n    handleAddOption () {\r\n      if (this.data.options.showLabel) {\r\n        this.data.options.options.push({\r\n          value: this.$t('fm.config.widget.newOption'),\r\n          label: this.$t('fm.config.widget.newOption')\r\n        })\r\n      } else {\r\n        this.data.options.options.push({\r\n          value: this.$t('fm.config.widget.newOption')\r\n        })\r\n      }\r\n      \r\n    },\r\n\r\n    handleAddOptionNPS () {\r\n      if (this.data.options.showLabel) {\r\n        this.data.options.options.push({\r\n          // value: this.$t('fm.config.widget.newOptionNPS'),\r\n          // label: this.$t('fm.config.widget.newOptionNPS')\r\n          value: ++this.data.options.npsValue,\r\n          label: this.data.options.npsValue\r\n        })\r\n      } else {\r\n        this.data.options.options.push({\r\n          // value: this.$t('fm.config.widget.newOptionNPS')\r\n          value: ++this.data.options.npsValue\r\n          // label: this.data.options.npsValue\r\n        })\r\n      }\r\n      \r\n    },\r\n\r\n    handleAddColumn () {\r\n      this.data.columns.push({\r\n        span: '',\r\n        list: []\r\n      })\r\n    },\r\n    generateRule () {\r\n      this.data.rules = []\r\n      Object.keys(this.validator).forEach(key => {\r\n        if (this.validator[key]) {\r\n          this.data.rules.push(this.validator[key])\r\n        }\r\n      })\r\n    },\r\n    handleSelectMuliple (value) {\r\n      if (value) {\r\n        if (this.data.options.defaultValue) {\r\n          this.data.options.defaultValue = [this.data.options.defaultValue]\r\n        } else {\r\n          this.data.options.defaultValue = []\r\n        }\r\n        \r\n      } else {\r\n        if (this.data.options.defaultValue.length>0){\r\n          this.data.options.defaultValue = this.data.options.defaultValue[0]\r\n        } else {\r\n          this.data.options.defaultValue = ''\r\n        }\r\n        \r\n      }\r\n    },\r\n\r\n    validateRequired (val) {\r\n      if (val) {\r\n        this.validator.required = {required: true, message: `${this.data.name}${this.$t('fm.config.widget.validatorRequired')}`}\r\n      } else {\r\n        this.validator.required = null\r\n      }\r\n\r\n      this.$nextTick(() => {\r\n        this.generateRule()\r\n      })\r\n    },\r\n\r\n    validateDataType (val) {\r\n      if (!this.show) {\r\n        return false\r\n      }\r\n      \r\n      if (val) {\r\n        this.validator.type = {type: val, message: this.data.name + this.$t('fm.config.widget.validatorType')}\r\n      } else {\r\n        this.validator.type = null\r\n      }\r\n\r\n      this.generateRule()\r\n    },\r\n    valiatePattern (val) {\r\n      if (!this.show) {\r\n        return false\r\n      }\r\n\r\n      if (val) {\r\n        this.validator.pattern = {pattern: val, message: this.data.name + this.$t('fm.config.widget.validatorPattern')}\r\n      } else {\r\n        this.validator.pattern = null\r\n      }\r\n\r\n      this.generateRule()\r\n    }\r\n  },\r\n  watch: {\r\n    'data.options.isRange': function(val) {\r\n      if (typeof val !== 'undefined') {\r\n        if (val) {\r\n          this.data.options.defaultValue = null\r\n        } else {\r\n          if (Object.keys(this.data.options).indexOf('defaultValue')>=0) \r\n            this.data.options.defaultValue = ''\r\n        }\r\n      }\r\n    },\r\n    'data.options.required': function(val) {\r\n      this.validateRequired(val)\r\n    },\r\n    'data.options.dataType': function (val) {\r\n      this.validateDataType(val)\r\n    },\r\n    'data.options.pattern': function (val) {\r\n      this.valiatePattern(val)\r\n    },\r\n    'data.name': function (val) {\r\n      if (this.data.options) {\r\n        this.validateRequired(this.data.options.required)\r\n        this.validateDataType(this.data.options.dataType)\r\n        this.valiatePattern(this.data.options.pattern)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}