{"remainingRequest":"E:\\code\\vue-form-making\\node_modules\\babel-loader\\lib\\index.js!E:\\code\\vue-form-making\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\code\\vue-form-making\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\vue-form-making\\src\\components\\Upload\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\vue-form-making\\src\\components\\Upload\\index.vue","mtime":1653889326450},{"path":"E:\\code\\vue-form-making\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653903169935},{"path":"E:\\code\\vue-form-making\\node_modules\\babel-loader\\lib\\index.js","mtime":1653803163997},{"path":"E:\\code\\vue-form-making\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653903169935},{"path":"E:\\code\\vue-form-making\\node_modules\\vue-loader\\lib\\index.js","mtime":1653903175370},{"path":"E:\\code\\vue-form-making\\package.json","mtime":1654423480823},{"path":"E:\\code\\vue-form-making\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653903169935},{"path":"E:\\code\\vue-form-making\\node_modules\\babel-loader\\lib\\index.js","mtime":1653803163997},{"path":"E:\\code\\vue-form-making\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653903169935},{"path":"E:\\code\\vue-form-making\\node_modules\\vue-loader\\lib\\index.js","mtime":1653903175370}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"E:/code/vue-form-making/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Viewer from 'viewerjs';\nimport Draggable from 'vuedraggable';\nimport * as qiniu from 'qiniu-js';\n\nrequire('viewerjs/dist/viewer.css');\n\nexport default {\n  components: {\n    Draggable: Draggable\n  },\n  props: {\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    width: {\n      type: Number,\n      default: 100\n    },\n    height: {\n      type: Number,\n      default: 100\n    },\n    token: {\n      type: String,\n      default: ''\n    },\n    domain: {\n      type: String,\n      default: ''\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    length: {\n      type: Number,\n      default: 9\n    },\n    isQiniu: {\n      type: Boolean,\n      default: false\n    },\n    isDelete: {\n      type: Boolean,\n      default: false\n    },\n    min: {\n      type: Number,\n      default: 0\n    },\n    meitu: {\n      type: Boolean,\n      default: false\n    },\n    isEdit: {\n      type: Boolean,\n      default: false\n    },\n    action: {\n      type: String,\n      default: ''\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      fileList: this.value.map(function (item) {\n        return {\n          key: item.key ? item.key : new Date().getTime() + '_' + Math.ceil(Math.random() * 99999),\n          url: item.url,\n          percent: item.percent ? item.percent : 100,\n          status: item.status ? item.status : 'success'\n        };\n      }),\n      viewer: null,\n      uploadId: 'upload_' + new Date().getTime(),\n      editIndex: -1,\n      meituIndex: -1\n    };\n  },\n  computed: {\n    miniWidth: function miniWidth() {\n      if (this.width > this.height) {\n        return this.height;\n      } else {\n        return this.width;\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.$emit('input', this.fileList);\n  },\n  methods: {\n    handleChange: function handleChange() {\n      var _this2 = this;\n\n      console.log(this.$refs.uploadInput.files);\n      var files = this.$refs.uploadInput.files;\n\n      var _loop = function _loop(i) {\n        var file = files[i];\n        var reader = new FileReader();\n        var key = new Date().getTime() + '_' + Math.ceil(Math.random() * 99999);\n        reader.readAsDataURL(file);\n\n        reader.onload = function () {\n          if (_this2.editIndex >= 0) {\n            _this2.$set(_this2.fileList, _this2.editIndex, {\n              key: key,\n              url: reader.result,\n              percent: 0,\n              status: 'uploading'\n            });\n\n            _this2.editIndex = -1;\n          } else {\n            _this2.fileList.push({\n              key: key,\n              url: reader.result,\n              percent: 0,\n              status: 'uploading'\n            });\n          }\n\n          _this2.$nextTick(function () {\n            if (_this2.isQiniu) {\n              _this2.uplaodAction2(reader.result, file, key);\n            } else {\n              _this2.uplaodAction(reader.result, file, key);\n            }\n          });\n        };\n      };\n\n      for (var i = 0; i < files.length; i++) {\n        _loop(i);\n      }\n\n      this.$refs.uploadInput.value = [];\n    },\n    uplaodAction: function uplaodAction(res, file, key) {\n      var _this3 = this;\n\n      var changeIndex = this.fileList.findIndex(function (item) {\n        return item.key === key;\n      });\n      console.log(this.fileList.findIndex(function (item) {\n        return item.key === key;\n      }));\n      var xhr = new XMLHttpRequest();\n      var url = this.action;\n      xhr.open('POST', url, true); // xhr.setRequestHeader('Content-Type', 'multipart/form-data')\n\n      var formData = new FormData();\n      formData.append('file', file);\n      xhr.send(formData);\n\n      xhr.onreadystatechange = function () {\n        console.log(xhr);\n\n        if (xhr.readyState === 4) {\n          var resData = JSON.parse(xhr.response);\n\n          if (resData && resData.url) {\n            _this3.$set(_this3.fileList, _this3.fileList.findIndex(function (item) {\n              return item.key === key;\n            }), _objectSpread(_objectSpread({}, _this3.fileList[_this3.fileList.findIndex(function (item) {\n              return item.key === key;\n            })]), {}, {\n              url: resData.url,\n              percent: 100\n            }));\n\n            setTimeout(function () {\n              _this3.$set(_this3.fileList, _this3.fileList.findIndex(function (item) {\n                return item.key === key;\n              }), _objectSpread(_objectSpread({}, _this3.fileList[_this3.fileList.findIndex(function (item) {\n                return item.key === key;\n              })]), {}, {\n                status: 'success'\n              }));\n\n              _this3.$emit('input', _this3.fileList);\n            }, 200);\n          } else {\n            _this3.$set(_this3.fileList, _this3.fileList.findIndex(function (item) {\n              return item.key === key;\n            }), _objectSpread(_objectSpread({}, _this3.fileList[_this3.fileList.findIndex(function (item) {\n              return item.key === key;\n            })]), {}, {\n              status: 'error'\n            }));\n\n            _this3.fileList.splice(_this3.fileList.findIndex(function (item) {\n              return item.key === key;\n            }), 1);\n          }\n        }\n      };\n\n      xhr.onprogress = function (res) {\n        console.log('progress', res);\n\n        if (res.total && res.loaded) {\n          _this3.$set(_this3.fileList[_this3.fileList.findIndex(function (item) {\n            return item.key === key;\n          })], 'percent', res.loaded / res.total * 100);\n        }\n      };\n    },\n    uplaodAction2: function uplaodAction2(res, file, key) {\n      var _this = this;\n\n      var observable = qiniu.upload(file, key, this.token, {\n        fname: key,\n        mimeType: []\n      }, {\n        useCdnDomain: true,\n        region: qiniu.region.z2\n      });\n      observable.subscribe({\n        next: function next(res) {\n          _this.$set(_this.fileList[_this.fileList.findIndex(function (item) {\n            return item.key === key;\n          })], 'percent', parseInt(res.total.percent));\n        },\n        error: function error(err) {\n          _this.$set(_this.fileList, _this.fileList.findIndex(function (item) {\n            return item.key === key;\n          }), _objectSpread(_objectSpread({}, _this.fileList[_this.fileList.findIndex(function (item) {\n            return item.key === key;\n          })]), {}, {\n            status: 'error'\n          }));\n\n          _this.fileList.splice(_this.fileList.findIndex(function (item) {\n            return item.key === key;\n          }), 1);\n        },\n        complete: function complete(res) {\n          _this.$set(_this.fileList, _this.fileList.findIndex(function (item) {\n            return item.key === key;\n          }), _objectSpread(_objectSpread({}, _this.fileList[_this.fileList.findIndex(function (item) {\n            return item.key === key;\n          })]), {}, {\n            url: _this.domain + res.key,\n            percent: 100\n          }));\n\n          setTimeout(function () {\n            _this.$set(_this.fileList, _this.fileList.findIndex(function (item) {\n              return item.key === key;\n            }), _objectSpread(_objectSpread({}, _this.fileList[_this.fileList.findIndex(function (item) {\n              return item.key === key;\n            })]), {}, {\n              status: 'success'\n            }));\n\n            _this.$emit('input', _this.fileList);\n          }, 200);\n        }\n      });\n    },\n    handleRemove: function handleRemove(key) {\n      this.fileList.splice(this.fileList.findIndex(function (item) {\n        return item.key === key;\n      }), 1);\n    },\n    handleEdit: function handleEdit(key) {\n      this.editIndex = this.fileList.findIndex(function (item) {\n        return item.key === key;\n      });\n      this.$refs.uploadInput.click();\n    },\n    handleMeitu: function handleMeitu(key) {\n      this.$emit('on-meitu', this.fileList.findIndex(function (item) {\n        return item.key === key;\n      }));\n    },\n    handleAdd: function handleAdd() {\n      if (!this.disabled) {\n        this.editIndex = -1;\n        this.$refs.uploadInput.click();\n      }\n    },\n    handlePreviewFile: function handlePreviewFile(key) {\n      var _this4 = this;\n\n      this.viewer && this.viewer.destroy();\n      this.uploadId = 'upload_' + new Date().getTime();\n      console.log(this.viewer);\n      this.$nextTick(function () {\n        _this4.viewer = new Viewer(document.getElementById(_this4.uploadId));\n\n        _this4.viewer.view(_this4.fileList.findIndex(function (item) {\n          return item.key === key;\n        }));\n      });\n    }\n  },\n  watch: {\n    'fileList': {\n      deep: true,\n      handler: function handler(val) {// this.$emit('input', this.fileList)\n      }\n    }\n  }\n};",{"version":3,"mappings":"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","names":["require","components","Draggable","props","value","type","default","width","height","token","domain","multiple","length","isQiniu","isDelete","min","meitu","isEdit","action","disabled","data","fileList","key","url","percent","status","viewer","uploadId","editIndex","meituIndex","computed","miniWidth","mounted","methods","handleChange","console","i","reader","uplaodAction","res","file","xhr","formData","setTimeout","uplaodAction2","fname","mimeType","useCdnDomain","region","observable","next","_this","error","err","complete","handleRemove","handleEdit","handleMeitu","handleAdd","handlePreviewFile","watch","deep","handler","val"],"sourceRoot":"src/components/Upload","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div class=\"fm-uplaod-container\"\r\n    :id=\"uploadId\"\r\n  >\r\n    <draggable class=\"drag-img-list\"\r\n      v-model=\"fileList\"\r\n      v-bind=\"{group: uploadId, ghostClass: 'ghost', animation: 200}\"\r\n      :no-transition-on-drag=\"true\"\r\n    >\r\n      <div \r\n        :id=\"item.key\"\r\n        :style=\"{width: width+'px', height: height+'px'}\"\r\n        :class=\"{uploading: item.status=='uploading', 'is-success': item.status=='success', 'is-diabled': disabled}\"\r\n        class=\"upload-file\" v-for=\"(item) in fileList\" :key=\"item.key\">\r\n        <img :src=\"item.url\" />\r\n\r\n        <el-progress v-if=\"item.status=='uploading'\" :width=\"miniWidth*0.9\" class=\"upload-progress\" type=\"circle\" :percentage=\"item.percent\"></el-progress>\r\n\r\n        <label class=\"item-status\" v-if=\"item.status=='success'\">\r\n          <i class=\"el-icon-upload-success el-icon-check\"></i>\r\n        </label>\r\n\r\n        <div class=\"uplaod-action\" :style=\"{height: miniWidth / 4 + 'px'}\" v-if=\"!disabled\">\r\n          <i class=\"iconfont icon-tupianyulan\" :title=\"$t('fm.upload.preview')\" @click=\"handlePreviewFile(item.key)\" :style=\"{'font-size': miniWidth/8+'px'}\"></i>\r\n          <i v-if=\"isEdit\" class=\"iconfont icon-sync1\" :title=\"$t('fm.upload.edit')\" @click=\"handleEdit(item.key)\" :style=\"{'font-size': miniWidth/8+'px'}\"></i>\r\n          <i v-if=\"isDelete && fileList.length > min\" class=\"iconfont icon-delete\" :title=\"$t('fm.upload.delete')\" @click=\"handleRemove(item.key)\" :style=\"{'font-size': miniWidth/8+'px'}\"></i>\r\n        </div>\r\n      </div>\r\n    </draggable>\r\n\r\n    <div class=\"el-upload el-upload--picture-card\"\r\n      :class=\"{'is-disabled': disabled}\"\r\n      v-show=\"(!isQiniu || (isQiniu && token)) && fileList.length < length\"\r\n      :style=\"{width: width+'px', height: height+'px'}\"\r\n      @click.self=\"handleAdd\"\r\n    >\r\n      <i class=\"el-icon-plus\" @click.self=\"handleAdd\" :style=\"{fontSize:miniWidth/4+'px',marginTop: (-miniWidth/8)+'px', marginLeft: (-miniWidth/8)+'px'}\"></i>\r\n      <input accept=\"image/*\" v-if=\"multiple\"  multiple ref=\"uploadInput\" @change=\"handleChange\" type=\"file\" :style=\"{width: 0, height: 0}\" name=\"file\" class=\"el-upload__input upload-input\">\r\n      <input accept=\"image/*\" v-else ref=\"uploadInput\" @change=\"handleChange\" type=\"file\" :style=\"{width:0, height: 0}\" name=\"file\" class=\"el-upload__input upload-input\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Viewer from 'viewerjs'\r\nimport Draggable from 'vuedraggable'\r\nimport * as qiniu from 'qiniu-js'\r\nrequire('viewerjs/dist/viewer.css')\r\nexport default {\r\n  components: {\r\n    Draggable\r\n  },\r\n  props: {\r\n    value: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    width: {\r\n      type: Number,\r\n      default: 100\r\n    },\r\n    height: {\r\n      type: Number,\r\n      default: 100\r\n    },\r\n    token: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    domain: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    multiple: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    length: {\r\n      type: Number,\r\n      default: 9\r\n    },\r\n    isQiniu: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    isDelete: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    min: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    meitu: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    isEdit: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    action: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      fileList: this.value.map(item => {\r\n        return {\r\n          key: item.key ? item.key : (new Date().getTime()) + '_' + Math.ceil(Math.random() * 99999),\r\n          url: item.url,\r\n          percent: item.percent ? item.percent : 100,\r\n          status: item.status ? item.status : 'success'\r\n        }\r\n      }),\r\n      viewer: null,\r\n      uploadId: 'upload_' + new Date().getTime(),\r\n      editIndex: -1,\r\n      meituIndex: -1,\r\n    }\r\n  },\r\n  computed: {\r\n    miniWidth () {\r\n      if (this.width > this.height) {\r\n        return this.height\r\n      } else {\r\n        return this.width\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    this.$emit('input', this.fileList)\r\n  },\r\n  methods: {\r\n    handleChange () {\r\n      console.log(this.$refs.uploadInput.files)\r\n      const files = this.$refs.uploadInput.files\r\n      \r\n      for (let i = 0; i < files.length; i++) {\r\n        const file = files[i]\r\n        const reader = new FileReader()\r\n        const key = (new Date().getTime()) + '_' + Math.ceil(Math.random() * 99999)\r\n        reader.readAsDataURL(file)\r\n        reader.onload = () => {\r\n          if (this.editIndex >= 0) {\r\n\r\n            this.$set(this.fileList, this.editIndex, {\r\n              key,\r\n              url: reader.result,\r\n              percent: 0,\r\n              status: 'uploading'\r\n            })\r\n\r\n            this.editIndex = -1\r\n          } else {\r\n            this.fileList.push({\r\n              key,\r\n              url: reader.result,\r\n              percent: 0,\r\n              status: 'uploading'\r\n            })\r\n          }\r\n\r\n          this.$nextTick(() => {\r\n            if (this.isQiniu) {\r\n              this.uplaodAction2(reader.result, file, key)\r\n            } else {\r\n              this.uplaodAction(reader.result, file, key)\r\n            }\r\n          })\r\n        }\r\n      }\r\n      this.$refs.uploadInput.value = []\r\n    }, \r\n    uplaodAction (res, file, key) {\r\n      let changeIndex = this.fileList.findIndex(item => item.key === key)\r\n      console.log(this.fileList.findIndex(item => item.key === key))\r\n      const xhr = new XMLHttpRequest()\r\n      \r\n      const url = this.action\r\n      xhr.open('POST', url, true)\r\n      // xhr.setRequestHeader('Content-Type', 'multipart/form-data')\r\n\r\n      let formData = new FormData()\r\n      formData.append('file', file)\r\n\r\n      xhr.send(formData)\r\n      xhr.onreadystatechange = () => {\r\n        console.log(xhr)\r\n        if (xhr.readyState === 4) {\r\n          \r\n          let resData = JSON.parse(xhr.response)\r\n          if (resData && resData.url) {\r\n            this.$set(this.fileList, this.fileList.findIndex(item => item.key === key), {\r\n              ...this.fileList[this.fileList.findIndex(item => item.key === key)],\r\n              url: resData.url,\r\n              percent: 100\r\n            })\r\n            setTimeout(() => {\r\n              this.$set(this.fileList, this.fileList.findIndex(item => item.key === key), {\r\n                ...this.fileList[this.fileList.findIndex(item => item.key === key)],\r\n                status: 'success'\r\n              })\r\n              this.$emit('input', this.fileList)\r\n            }, 200)\r\n          } else {\r\n            this.$set(this.fileList, this.fileList.findIndex(item => item.key === key), {\r\n              ...this.fileList[this.fileList.findIndex(item => item.key === key)],\r\n              status: 'error'\r\n            })\r\n            this.fileList.splice(this.fileList.findIndex(item => item.key === key), 1)\r\n          }\r\n        }\r\n      }\r\n      xhr.onprogress = (res) => {\r\n        console.log('progress', res)\r\n        if (res.total && res.loaded) {\r\n          this.$set(this.fileList[this.fileList.findIndex(item => item.key === key)], 'percent', res.loaded/res.total*100)\r\n        }\r\n      }\r\n    },\r\n    uplaodAction2 (res, file, key) {\r\n      const _this = this\r\n      const observable = qiniu.upload(file, key, this.token, {\r\n        fname: key,\r\n        mimeType: []\r\n      }, {\r\n        useCdnDomain: true,\r\n        region: qiniu.region.z2\r\n      })\r\n      observable.subscribe({\r\n        next (res) {\r\n          _this.$set(_this.fileList[_this.fileList.findIndex(item => item.key === key)], 'percent', parseInt(res.total.percent))\r\n          \r\n        },\r\n        error (err) {\r\n          _this.$set(_this.fileList, _this.fileList.findIndex(item => item.key === key), {\r\n            ..._this.fileList[_this.fileList.findIndex(item => item.key === key)],\r\n            status: 'error'\r\n          })\r\n          _this.fileList.splice(_this.fileList.findIndex(item => item.key === key), 1)\r\n        },\r\n        complete (res) {\r\n          _this.$set(_this.fileList, _this.fileList.findIndex(item => item.key === key), {\r\n            ..._this.fileList[_this.fileList.findIndex(item => item.key === key)],\r\n            url: _this.domain + res.key,\r\n            percent: 100\r\n          })\r\n          setTimeout(() => {\r\n            _this.$set(_this.fileList, _this.fileList.findIndex(item => item.key === key), {\r\n              ..._this.fileList[_this.fileList.findIndex(item => item.key === key)],\r\n              status: 'success'\r\n            })\r\n            _this.$emit('input', _this.fileList)\r\n          }, 200)\r\n        }\r\n      })\r\n    },\r\n    handleRemove (key) {\r\n      this.fileList.splice(this.fileList.findIndex(item => item.key === key), 1)\r\n    },\r\n    handleEdit (key) {\r\n      \r\n      this.editIndex = this.fileList.findIndex(item => item.key === key)\r\n      \r\n      this.$refs.uploadInput.click()\r\n    },\r\n    handleMeitu (key) {\r\n\r\n      this.$emit('on-meitu', this.fileList.findIndex(item => item.key === key))\r\n    },\r\n    handleAdd () {\r\n      if (!this.disabled) {\r\n        this.editIndex = -1\r\n        this.$refs.uploadInput.click()\r\n      }\r\n    },\r\n    handlePreviewFile (key) {\r\n      this.viewer && this.viewer.destroy()\r\n      this.uploadId = 'upload_' + new Date().getTime()\r\n      \r\n      console.log(this.viewer)\r\n      this.$nextTick(() => {\r\n        this.viewer = new Viewer(document.getElementById(this.uploadId))\r\n        this.viewer.view(this.fileList.findIndex(item => item.key === key))\r\n      })\r\n    }\r\n  },\r\n  watch: {\r\n    'fileList': {\r\n      deep: true,\r\n      handler (val) {\r\n        // this.$emit('input', this.fileList)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.fm-uplaod-container{\r\n  .is-disabled{\r\n    position: relative;\r\n\r\n    &::after{\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      // background: rgba(0,0,0,.1);\r\n      content: '';\r\n      display: block;\r\n      cursor:not-allowed;\r\n    }\r\n  }\r\n\r\n  .upload-file{\r\n    margin: 0 10px 10px 0;\r\n    display: inline-flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    // background: #fff;\r\n    overflow: hidden;\r\n    background-color: #fff;\r\n    border: 1px solid #c0ccda;\r\n    border-radius: 6px;\r\n    box-sizing: border-box;\r\n    position: relative;\r\n    vertical-align: top;\r\n    &:hover{\r\n      .uplaod-action{\r\n        display: flex;\r\n      }\r\n    }\r\n    .uplaod-action{\r\n      position: absolute;\r\n      // top: 0;\r\n      // height: 30px;\r\n      bottom: 0;\r\n      left: 0;\r\n      right: 0;\r\n      background: rgba(0,0,0,0.6);\r\n      display: none;\r\n      justify-content: center;\r\n      align-items: center;\r\n      i{\r\n        color: #fff;\r\n        cursor: pointer;\r\n        margin: 0 5px;\r\n      }\r\n    }\r\n    &.is-success{\r\n      .item-status{\r\n        position: absolute;\r\n        right: -15px;\r\n        top: -6px;\r\n        width: 40px;\r\n        height: 24px;\r\n        background: #13ce66;\r\n        text-align: center;\r\n        transform: rotate(45deg);\r\n        box-shadow: 0 0 1pc 1px rgba(0,0,0,.2);\r\n        &>i{\r\n          font-size: 12px;\r\n          margin-top: 11px;\r\n          color: #fff;\r\n          transform: rotate(-45deg);\r\n        }\r\n      }\r\n    }\r\n    &.uploading{\r\n      &:before{\r\n        display: block;\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        background: rgba(0,0,0,0.3);\r\n      }\r\n    }\r\n    .upload-progress{\r\n      position: absolute;\r\n      .el-progress__text{\r\n        color: #fff;\r\n        font-size: 16px !important;\r\n      }\r\n    }\r\n    img{\r\n      max-width: 100%;\r\n      max-height: 100%;\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n  .el-upload--picture-card{\r\n    position: relative;\r\n    overflow: hidden;\r\n    .el-icon-plus{\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n    }\r\n  }\r\n  .upload-input{\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    display: block;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .drag-img-list{\r\n    display: inline;\r\n\r\n    .ghost{\r\n      position: relative;\r\n      &::after {\r\n        width: 100%;\r\n        height: 100%;\r\n        display: block;\r\n        content: '';\r\n        background: #fbfdff;\r\n        position: absolute;\r\n        top: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n        border: 1px dashed #3bb3c2;\r\n      }\r\n    }\r\n\r\n    &>div{\r\n      cursor: move;\r\n    }\r\n  }\r\n}\r\n\r\n.viewer-container{\r\n  z-index: 9999 !important;\r\n}\r\n</style>\r\n"]}]}