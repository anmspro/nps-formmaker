{"remainingRequest":"E:\\code\\vue js\\vue-form-making\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\code\\vue js\\vue-form-making\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\code\\vue js\\vue-form-making\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\vue js\\vue-form-making\\src\\components\\GenerateFormItem.vue?vue&type=template&id=51a610bc&","dependencies":[{"path":"E:\\code\\vue js\\vue-form-making\\src\\components\\GenerateFormItem.vue","mtime":1655197883645},{"path":"E:\\code\\vue js\\vue-form-making\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653903169935},{"path":"E:\\code\\vue js\\vue-form-making\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1653903175370},{"path":"E:\\code\\vue js\\vue-form-making\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653903169935},{"path":"E:\\code\\vue js\\vue-form-making\\node_modules\\vue-loader\\lib\\index.js","mtime":1653903175370}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-form-item\",\n    { attrs: { prop: _vm.widget.model } },\n    [\n      _vm.widget.type == \"input\"\n        ? [\n            _vm.widget.options.dataType == \"number\" ||\n            _vm.widget.options.dataType == \"integer\" ||\n            _vm.widget.options.dataType == \"float\"\n              ? _c(\"el-input\", {\n                  style: { width: _vm.widget.options.width },\n                  attrs: {\n                    type: \"number\",\n                    placeholder: _vm.widget.options.placeholder,\n                    disabled: _vm.widget.options.disabled,\n                  },\n                  model: {\n                    value: _vm.dataModel,\n                    callback: function ($$v) {\n                      _vm.dataModel = _vm._n($$v)\n                    },\n                    expression: \"dataModel\",\n                  },\n                })\n              : _c(\"el-input\", {\n                  style: { width: _vm.widget.options.width },\n                  attrs: {\n                    type: _vm.widget.options.dataType,\n                    disabled: _vm.widget.options.disabled,\n                    placeholder: _vm.widget.options.placeholder,\n                  },\n                  model: {\n                    value: _vm.dataModel,\n                    callback: function ($$v) {\n                      _vm.dataModel = $$v\n                    },\n                    expression: \"dataModel\",\n                  },\n                }),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"textarea\"\n        ? [\n            _c(\"el-input\", {\n              style: { width: _vm.widget.options.width },\n              attrs: {\n                type: \"textarea\",\n                rows: 5,\n                disabled: _vm.widget.options.disabled,\n                placeholder: _vm.widget.options.placeholder,\n              },\n              model: {\n                value: _vm.dataModel,\n                callback: function ($$v) {\n                  _vm.dataModel = $$v\n                },\n                expression: \"dataModel\",\n              },\n            }),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"number\"\n        ? [\n            _c(\"el-input-number\", {\n              style: { width: _vm.widget.options.width },\n              attrs: {\n                step: _vm.widget.options.step,\n                \"controls-position\": \"right\",\n                disabled: _vm.widget.options.disabled,\n                min: _vm.widget.options.min,\n                max: _vm.widget.options.max,\n              },\n              model: {\n                value: _vm.dataModel,\n                callback: function ($$v) {\n                  _vm.dataModel = $$v\n                },\n                expression: \"dataModel\",\n              },\n            }),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"radio\"\n        ? [\n            _c(\n              \"el-radio-group\",\n              {\n                style: { width: _vm.widget.options.width },\n                attrs: { disabled: _vm.widget.options.disabled },\n                model: {\n                  value: _vm.dataModel,\n                  callback: function ($$v) {\n                    _vm.dataModel = $$v\n                  },\n                  expression: \"dataModel\",\n                },\n              },\n              _vm._l(\n                _vm.widget.options.remote\n                  ? _vm.widget.options.remoteOptions\n                  : _vm.widget.options.options,\n                function (item, index) {\n                  return _c(\n                    \"el-radio\",\n                    {\n                      key: index,\n                      style: {\n                        display: _vm.widget.options.inline\n                          ? \"inline-block\"\n                          : \"block\",\n                      },\n                      attrs: { label: item.value },\n                    },\n                    [\n                      _vm.widget.options.remote\n                        ? [_vm._v(_vm._s(item.label))]\n                        : [\n                            _vm._v(\n                              _vm._s(\n                                _vm.widget.options.showLabel\n                                  ? item.label\n                                  : item.value\n                              )\n                            ),\n                          ],\n                    ],\n                    2\n                  )\n                }\n              ),\n              1\n            ),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"nps\"\n        ? [\n            _c(\"p\", {\n              domProps: { innerHTML: _vm._s(_vm.widget.options.textValue) },\n            }),\n            _c(\"br\"),\n            _c(\"p\", {\n              domProps: {\n                innerHTML: _vm._s(_vm.widget.options.descriptionValue),\n              },\n            }),\n            _c(\"br\"),\n            _c(\n              \"el-radio-group\",\n              {\n                style: { width: _vm.widget.options.width },\n                attrs: { disabled: _vm.widget.options.disabled },\n                model: {\n                  value: _vm.dataModel,\n                  callback: function ($$v) {\n                    _vm.dataModel = $$v\n                  },\n                  expression: \"dataModel\",\n                },\n              },\n              _vm._l(\n                _vm.widget.options.remote\n                  ? _vm.widget.options.remoteOptions\n                  : _vm.widget.options.options,\n                function (item, index) {\n                  return _c(\n                    \"el-radio\",\n                    {\n                      key: index,\n                      style: {\n                        display: _vm.widget.options.inline\n                          ? \"inline-block\"\n                          : \"block\",\n                      },\n                      attrs: { label: item.value },\n                    },\n                    [\n                      _vm.widget.options.remote\n                        ? [_vm._v(_vm._s(item.label))]\n                        : [\n                            _vm._v(\n                              _vm._s(\n                                _vm.widget.options.showLabel\n                                  ? item.label\n                                  : item.value\n                              )\n                            ),\n                          ],\n                    ],\n                    2\n                  )\n                }\n              ),\n              1\n            ),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"mcqSingle\"\n        ? [\n            _c(\"p\", {\n              domProps: { innerHTML: _vm._s(_vm.widget.options.textValue) },\n            }),\n            _c(\"br\"),\n            _c(\n              \"el-radio-group\",\n              {\n                style: { width: _vm.widget.options.width },\n                attrs: { disabled: _vm.widget.options.disabled },\n                model: {\n                  value: _vm.dataModel,\n                  callback: function ($$v) {\n                    _vm.dataModel = $$v\n                  },\n                  expression: \"dataModel\",\n                },\n              },\n              _vm._l(\n                _vm.widget.options.remote\n                  ? _vm.widget.options.remoteOptions\n                  : _vm.widget.options.options,\n                function (item, index) {\n                  return _c(\n                    \"el-radio\",\n                    {\n                      key: index,\n                      style: {\n                        display: _vm.widget.options.inline\n                          ? \"inline-block\"\n                          : \"block\",\n                      },\n                      attrs: { label: item.value },\n                    },\n                    [\n                      _vm.widget.options.remote\n                        ? [_vm._v(_vm._s(item.label))]\n                        : [\n                            _vm._v(\n                              _vm._s(\n                                _vm.widget.options.showLabel\n                                  ? item.label\n                                  : item.value\n                              )\n                            ),\n                          ],\n                    ],\n                    2\n                  )\n                }\n              ),\n              1\n            ),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"mcqMultiple\"\n        ? [\n            _c(\"p\", {\n              domProps: { innerHTML: _vm._s(_vm.widget.options.textValue) },\n            }),\n            _c(\"br\"),\n            _c(\n              \"el-checkbox-group\",\n              {\n                style: { width: _vm.widget.options.width },\n                attrs: { disabled: _vm.widget.options.disabled },\n                model: {\n                  value: _vm.dataModel,\n                  callback: function ($$v) {\n                    _vm.dataModel = $$v\n                  },\n                  expression: \"dataModel\",\n                },\n              },\n              _vm._l(\n                _vm.widget.options.remote\n                  ? _vm.widget.options.remoteOptions\n                  : _vm.widget.options.options,\n                function (item, index) {\n                  return _c(\n                    \"el-checkbox\",\n                    {\n                      key: index,\n                      style: {\n                        display: _vm.widget.options.inline\n                          ? \"inline-block\"\n                          : \"block\",\n                      },\n                      attrs: { label: item.value },\n                    },\n                    [\n                      _vm.widget.options.remote\n                        ? [_vm._v(_vm._s(item.label))]\n                        : [\n                            _vm._v(\n                              _vm._s(\n                                _vm.widget.options.showLabel\n                                  ? item.label\n                                  : item.value\n                              )\n                            ),\n                          ],\n                    ],\n                    2\n                  )\n                }\n              ),\n              1\n            ),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"rating\"\n        ? [\n            _c(\"p\", {\n              domProps: { innerHTML: _vm._s(_vm.widget.options.textValue) },\n            }),\n            _c(\"br\"),\n            _c(\"p\", {\n              domProps: {\n                innerHTML: _vm._s(_vm.widget.options.descriptionValue),\n              },\n            }),\n            _c(\"br\"),\n            _c(\"el-rate\", {\n              attrs: {\n                max: _vm.widget.options.max,\n                disabled: _vm.widget.options.disabled,\n                \"allow-half\": _vm.widget.options.allowHalf,\n              },\n              model: {\n                value: _vm.dataModel,\n                callback: function ($$v) {\n                  _vm.dataModel = $$v\n                },\n                expression: \"dataModel\",\n              },\n            }),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"matrix\"\n        ? [\n            _c(\"p\", {\n              domProps: { innerHTML: _vm._s(_vm.widget.options.textValue) },\n            }),\n            _c(\"br\"),\n            _c(\"p\", {\n              domProps: {\n                innerHTML: _vm._s(_vm.widget.options.descriptionValue),\n              },\n            }),\n            _c(\"br\"),\n            _c(\n              \"el-radio-group\",\n              {\n                style: { width: _vm.widget.options.width },\n                attrs: { disabled: _vm.widget.options.disabled },\n                model: {\n                  value: _vm.dataModel,\n                  callback: function ($$v) {\n                    _vm.dataModel = $$v\n                  },\n                  expression: \"dataModel\",\n                },\n              },\n              _vm._l(\n                _vm.widget.options.remote\n                  ? _vm.widget.options.remoteOptions\n                  : _vm.widget.options.options1,\n                function (item, index) {\n                  return _c(\n                    \"el-radio\",\n                    {\n                      key: index,\n                      style: {\n                        display: _vm.widget.options.inline\n                          ? \"inline-block\"\n                          : \"block\",\n                      },\n                      attrs: { label: item.value },\n                    },\n                    [\n                      _vm.widget.options.remote\n                        ? [_vm._v(_vm._s(item.label))]\n                        : [\n                            _vm._v(\n                              _vm._s(\n                                _vm.widget.options.showLabel\n                                  ? item.label\n                                  : item.value\n                              )\n                            ),\n                          ],\n                    ],\n                    2\n                  )\n                }\n              ),\n              1\n            ),\n            _c(\n              \"el-radio-group\",\n              {\n                style: { width: _vm.widget.options.width },\n                attrs: { disabled: _vm.widget.options.disabled },\n                model: {\n                  value: _vm.dataModel,\n                  callback: function ($$v) {\n                    _vm.dataModel = $$v\n                  },\n                  expression: \"dataModel\",\n                },\n              },\n              _vm._l(\n                _vm.widget.options.remote\n                  ? _vm.widget.options.remoteOptions\n                  : _vm.widget.options.options2,\n                function (item, index) {\n                  return _c(\n                    \"el-radio\",\n                    {\n                      key: index,\n                      style: {\n                        display: _vm.widget.options.inline\n                          ? \"inline-block\"\n                          : \"block\",\n                      },\n                      attrs: { label: item.value },\n                    },\n                    [\n                      _vm.widget.options.remote\n                        ? [_vm._v(_vm._s(item.label))]\n                        : [\n                            _vm._v(\n                              _vm._s(\n                                _vm.widget.options.showLabel\n                                  ? item.label\n                                  : item.value\n                              )\n                            ),\n                          ],\n                    ],\n                    2\n                  )\n                }\n              ),\n              1\n            ),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"matrixDynamic\"\n        ? [\n            _c(\"p\", {\n              domProps: { innerHTML: _vm._s(_vm.widget.options.textValue) },\n            }),\n            _c(\"br\"),\n            _c(\"p\", {\n              domProps: {\n                innerHTML: _vm._s(_vm.widget.options.descriptionValue),\n              },\n            }),\n            _c(\"br\"),\n            _c(\"table\", [\n              _c(\"thead\", [\n                _c(\n                  \"tr\",\n                  [\n                    _c(\"th\", { attrs: { scope: \"col\" } }),\n                    _vm._l(_vm.widget.options.columnOptions, function (column) {\n                      return _c(\n                        \"th\",\n                        { key: column.value, attrs: { scope: \"col\" } },\n                        [\n                          _vm._v(\n                            \"\\n          \" +\n                              _vm._s(column.name) +\n                              \"\\n          \"\n                          ),\n                        ]\n                      )\n                    }),\n                  ],\n                  2\n                ),\n              ]),\n              _c(\n                \"tbody\",\n                _vm._l(_vm.widget.options.rowOptions, function (row, index) {\n                  return _c(\"tr\", { key: row.name }, [\n                    _c(\"th\", { attrs: { scope: \"row\" } }, [\n                      _c(\"div\", [_c(\"label\", [_vm._v(_vm._s(row.name))])]),\n                    ]),\n                    _c(\n                      \"td\",\n                      {\n                        attrs: {\n                          colspan: _vm.widget.options.columnOptions.length,\n                        },\n                      },\n                      [\n                        _c(\n                          \"el-radio-group\",\n                          {\n                            style: { width: _vm.widget.options.width },\n                            attrs: { disabled: _vm.widget.options.disabled },\n                            model: {\n                              value: _vm.widget.options.defaultValue[index],\n                              callback: function ($$v) {\n                                _vm.$set(\n                                  _vm.widget.options.defaultValue,\n                                  index,\n                                  $$v\n                                )\n                              },\n                              expression: \"widget.options.defaultValue[index]\",\n                            },\n                          },\n                          _vm._l(\n                            _vm.widget.options.columnOptions,\n                            function (item, index) {\n                              return _c(\n                                \"el-radio\",\n                                {\n                                  key: item.value + index,\n                                  style: {\n                                    display: _vm.widget.options.inline\n                                      ? \"inline-block\"\n                                      : \"block\",\n                                  },\n                                  attrs: { label: item.value },\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                  \" +\n                                      _vm._s(\n                                        _vm.widget.options.showLabel\n                                          ? item.label\n                                          : item.value\n                                      ) +\n                                      \"\\n                \"\n                                  ),\n                                ]\n                              )\n                            }\n                          ),\n                          1\n                        ),\n                      ],\n                      1\n                    ),\n                  ])\n                }),\n                0\n              ),\n            ]),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"yesno\"\n        ? [\n            _c(\"p\", {\n              domProps: { innerHTML: _vm._s(_vm.widget.options.textValue) },\n            }),\n            _c(\"br\"),\n            _c(\n              \"el-radio-group\",\n              {\n                style: { width: _vm.widget.options.width },\n                attrs: { disabled: _vm.widget.options.disabled },\n                model: {\n                  value: _vm.dataModel,\n                  callback: function ($$v) {\n                    _vm.dataModel = $$v\n                  },\n                  expression: \"dataModel\",\n                },\n              },\n              _vm._l(\n                _vm.widget.options.remote\n                  ? _vm.widget.options.remoteOptions\n                  : _vm.widget.options.options,\n                function (item, index) {\n                  return _c(\n                    \"el-radio\",\n                    {\n                      key: index,\n                      style: {\n                        display: _vm.widget.options.inline\n                          ? \"inline-block\"\n                          : \"block\",\n                      },\n                      attrs: { label: item.value },\n                    },\n                    [\n                      _vm.widget.options.remote\n                        ? [_vm._v(_vm._s(item.label))]\n                        : [\n                            _vm._v(\n                              _vm._s(\n                                _vm.widget.options.showLabel\n                                  ? item.label\n                                  : item.value\n                              )\n                            ),\n                          ],\n                    ],\n                    2\n                  )\n                }\n              ),\n              1\n            ),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"openEnded\"\n        ? [\n            _c(\"p\", {\n              domProps: { innerHTML: _vm._s(_vm.widget.options.textValue) },\n            }),\n            _c(\"br\"),\n            _c(\"el-input\", {\n              style: { width: _vm.widget.options.width },\n              attrs: {\n                type: \"textarea\",\n                rows: 2,\n                disabled: _vm.widget.options.disabled,\n                placeholder: _vm.widget.options.placeholder,\n              },\n              model: {\n                value: _vm.dataModel,\n                callback: function ($$v) {\n                  _vm.dataModel = $$v\n                },\n                expression: \"dataModel\",\n              },\n            }),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"checkbox\"\n        ? [\n            _c(\n              \"el-checkbox-group\",\n              {\n                style: { width: _vm.widget.options.width },\n                attrs: { disabled: _vm.widget.options.disabled },\n                model: {\n                  value: _vm.dataModel,\n                  callback: function ($$v) {\n                    _vm.dataModel = $$v\n                  },\n                  expression: \"dataModel\",\n                },\n              },\n              _vm._l(\n                _vm.widget.options.remote\n                  ? _vm.widget.options.remoteOptions\n                  : _vm.widget.options.options,\n                function (item, index) {\n                  return _c(\n                    \"el-checkbox\",\n                    {\n                      key: index,\n                      style: {\n                        display: _vm.widget.options.inline\n                          ? \"inline-block\"\n                          : \"block\",\n                      },\n                      attrs: { label: item.value },\n                    },\n                    [\n                      _vm.widget.options.remote\n                        ? [_vm._v(_vm._s(item.label))]\n                        : [\n                            _vm._v(\n                              _vm._s(\n                                _vm.widget.options.showLabel\n                                  ? item.label\n                                  : item.value\n                              )\n                            ),\n                          ],\n                    ],\n                    2\n                  )\n                }\n              ),\n              1\n            ),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"time\"\n        ? [\n            _c(\"el-time-picker\", {\n              style: { width: _vm.widget.options.width },\n              attrs: {\n                \"is-range\": _vm.widget.options.isRange,\n                placeholder: _vm.widget.options.placeholder,\n                \"start-placeholder\": _vm.widget.options.startPlaceholder,\n                \"end-placeholder\": _vm.widget.options.endPlaceholder,\n                readonly: _vm.widget.options.readonly,\n                disabled: _vm.widget.options.disabled,\n                editable: _vm.widget.options.editable,\n                clearable: _vm.widget.options.clearable,\n                arrowControl: _vm.widget.options.arrowControl,\n                \"value-format\": _vm.widget.options.format,\n              },\n              model: {\n                value: _vm.dataModel,\n                callback: function ($$v) {\n                  _vm.dataModel = $$v\n                },\n                expression: \"dataModel\",\n              },\n            }),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"date\"\n        ? [\n            _c(\"el-date-picker\", {\n              style: { width: _vm.widget.options.width },\n              attrs: {\n                type: _vm.widget.options.type,\n                placeholder: _vm.widget.options.placeholder,\n                \"start-placeholder\": _vm.widget.options.startPlaceholder,\n                \"end-placeholder\": _vm.widget.options.endPlaceholder,\n                readonly: _vm.widget.options.readonly,\n                disabled: _vm.widget.options.disabled,\n                editable: _vm.widget.options.editable,\n                clearable: _vm.widget.options.clearable,\n                \"value-format\": _vm.widget.options.timestamp\n                  ? \"timestamp\"\n                  : _vm.widget.options.format,\n                format: _vm.widget.options.format,\n              },\n              model: {\n                value: _vm.dataModel,\n                callback: function ($$v) {\n                  _vm.dataModel = $$v\n                },\n                expression: \"dataModel\",\n              },\n            }),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"rate\"\n        ? [\n            _c(\"el-rate\", {\n              attrs: {\n                max: _vm.widget.options.max,\n                disabled: _vm.widget.options.disabled,\n                \"allow-half\": _vm.widget.options.allowHalf,\n              },\n              model: {\n                value: _vm.dataModel,\n                callback: function ($$v) {\n                  _vm.dataModel = $$v\n                },\n                expression: \"dataModel\",\n              },\n            }),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"color\"\n        ? [\n            _c(\"el-color-picker\", {\n              attrs: {\n                disabled: _vm.widget.options.disabled,\n                \"show-alpha\": _vm.widget.options.showAlpha,\n              },\n              model: {\n                value: _vm.dataModel,\n                callback: function ($$v) {\n                  _vm.dataModel = $$v\n                },\n                expression: \"dataModel\",\n              },\n            }),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"select\"\n        ? [\n            _c(\n              \"el-select\",\n              {\n                style: { width: _vm.widget.options.width },\n                attrs: {\n                  disabled: _vm.widget.options.disabled,\n                  multiple: _vm.widget.options.multiple,\n                  clearable: _vm.widget.options.clearable,\n                  placeholder: _vm.widget.options.placeholder,\n                  filterable: _vm.widget.options.filterable,\n                },\n                model: {\n                  value: _vm.dataModel,\n                  callback: function ($$v) {\n                    _vm.dataModel = $$v\n                  },\n                  expression: \"dataModel\",\n                },\n              },\n              _vm._l(\n                _vm.widget.options.remote\n                  ? _vm.widget.options.remoteOptions\n                  : _vm.widget.options.options,\n                function (item) {\n                  return _c(\"el-option\", {\n                    key: item.value,\n                    attrs: {\n                      value: item.value,\n                      label:\n                        _vm.widget.options.showLabel ||\n                        _vm.widget.options.remote\n                          ? item.label\n                          : item.value,\n                    },\n                  })\n                }\n              ),\n              1\n            ),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"switch\"\n        ? [\n            _c(\"el-switch\", {\n              attrs: { disabled: _vm.widget.options.disabled },\n              model: {\n                value: _vm.dataModel,\n                callback: function ($$v) {\n                  _vm.dataModel = $$v\n                },\n                expression: \"dataModel\",\n              },\n            }),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"slider\"\n        ? [\n            _c(\"p\", {\n              domProps: { innerHTML: _vm._s(_vm.widget.options.textValue) },\n            }),\n            _c(\"br\"),\n            _c(\"el-slider\", {\n              style: { width: _vm.widget.options.width },\n              attrs: {\n                min: _vm.widget.options.min,\n                max: _vm.widget.options.max,\n                disabled: _vm.widget.options.disabled,\n                step: _vm.widget.options.step,\n                \"show-input\": _vm.widget.options.showInput,\n                range: _vm.widget.options.range,\n              },\n              model: {\n                value: _vm.dataModel,\n                callback: function ($$v) {\n                  _vm.dataModel = $$v\n                },\n                expression: \"dataModel\",\n              },\n            }),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"imgupload\"\n        ? [\n            _c(\"fm-upload\", {\n              style: { width: _vm.widget.options.width },\n              attrs: {\n                disabled: _vm.widget.options.disabled,\n                width: _vm.widget.options.size.width,\n                height: _vm.widget.options.size.height,\n                token: _vm.widget.options.token,\n                domain: _vm.widget.options.domain,\n                multiple: _vm.widget.options.multiple,\n                length: _vm.widget.options.length,\n                \"is-qiniu\": _vm.widget.options.isQiniu,\n                \"is-delete\": _vm.widget.options.isDelete,\n                min: _vm.widget.options.min,\n                \"is-edit\": _vm.widget.options.isEdit,\n                action: _vm.widget.options.action,\n              },\n              model: {\n                value: _vm.dataModel,\n                callback: function ($$v) {\n                  _vm.dataModel = $$v\n                },\n                expression: \"dataModel\",\n              },\n            }),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"editor\"\n        ? [\n            _c(\"vue-editor\", {\n              style: { width: _vm.widget.options.width },\n              model: {\n                value: _vm.dataModel,\n                callback: function ($$v) {\n                  _vm.dataModel = $$v\n                },\n                expression: \"dataModel\",\n              },\n            }),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"cascader\"\n        ? [\n            _c(\"el-cascader\", {\n              style: { width: _vm.widget.options.width },\n              attrs: {\n                disabled: _vm.widget.options.disabled,\n                clearable: _vm.widget.options.clearable,\n                placeholder: _vm.widget.options.placeholder,\n                options: _vm.widget.options.remoteOptions,\n              },\n              model: {\n                value: _vm.dataModel,\n                callback: function ($$v) {\n                  _vm.dataModel = $$v\n                },\n                expression: \"dataModel\",\n              },\n            }),\n          ]\n        : _vm._e(),\n      _vm.widget.type == \"text\"\n        ? [_c(\"span\", [_vm._v(_vm._s(_vm.dataModel))])]\n        : _vm._e(),\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}