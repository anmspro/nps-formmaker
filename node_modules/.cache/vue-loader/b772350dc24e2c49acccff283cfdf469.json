{"remainingRequest":"E:\\code\\vue js\\vue-form-making\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\vue js\\vue-form-making\\src\\components\\Container.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\vue js\\vue-form-making\\src\\components\\Container.vue","mtime":1655032542480},{"path":"E:\\code\\vue js\\vue-form-making\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653903169935},{"path":"E:\\code\\vue js\\vue-form-making\\node_modules\\babel-loader\\lib\\index.js","mtime":1653803163997},{"path":"E:\\code\\vue js\\vue-form-making\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653903169935},{"path":"E:\\code\\vue js\\vue-form-making\\node_modules\\vue-loader\\lib\\index.js","mtime":1653903175370}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Draggable from 'vuedraggable'\r\nimport WidgetConfig from './WidgetConfig'\r\nimport FormConfig from './FormConfig'\r\nimport WidgetForm from './WidgetForm'\r\nimport CusDialog from './CusDialog'\r\nimport GenerateForm from './GenerateForm'\r\nimport Clipboard from 'clipboard'\r\nimport {basicComponents, layoutComponents, advanceComponents} from './componentsConfig.js'\r\nimport {loadJs, loadCss} from '../util/index.js'\r\nimport request from '../util/request.js'\r\nimport generateCode from './generateCode.js'\r\n\r\nexport default {\r\n  name: 'fm-making-form',\r\n  components: {\r\n    Draggable,\r\n    WidgetConfig,\r\n    FormConfig,\r\n    WidgetForm,\r\n    CusDialog,\r\n    GenerateForm\r\n  },\r\n  props: {\r\n    preview: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    generateCode: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    generateJson: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    upload: {\r\n      type: Boolean, \r\n      default: false\r\n    },\r\n    clearable: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    basicFields: {\r\n      type: Array,\r\n      default: () => ['input', 'textarea', 'number', 'radio', 'checkbox', 'time', 'date',\r\n                      'color', 'select', 'switch', 'text', 'nps', 'mcqSingle', 'mcqMultiple',\r\n                      'rating', 'matrix', 'yesno', 'openEnded', 'slider', 'matrixDynamic']\r\n    },\r\n    advanceFields: {\r\n      type: Array,\r\n      default: () => ['blank', 'imgupload', 'editor', 'cascader']\r\n    },\r\n    layoutFields: {\r\n      type: Array,\r\n      default: () => ['grid']\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      basicComponents,\r\n      layoutComponents,\r\n      advanceComponents,\r\n      resetJson: false,\r\n      widgetForm: {\r\n        list: [],\r\n        // config: {\r\n        //   labelWidth: 100,\r\n        //   labelPosition: 'right',\r\n        //   size: 'small'\r\n        // },\r\n        config: {\r\n          labelWidth: 20,\r\n          labelPosition: 'left',\r\n          size: 'mini'\r\n        },\r\n      },\r\n      configTab: 'widget',\r\n      widgetFormSelect: null,\r\n      previewVisible: false,\r\n      jsonVisible: false,\r\n      codeVisible: false,\r\n      uploadVisible: false,\r\n      remoteFuncs: {\r\n        func_test (resolve) {\r\n          setTimeout(() => {\r\n            const options = [\r\n              {id: '1', name: '1111'},\r\n              {id: '2', name: '2222'},\r\n              {id: '3', name: '3333'}\r\n            ]\r\n\r\n            resolve(options)\r\n          }, 2000)\r\n        },\r\n        funcGetToken (resolve) {\r\n          request.get('http://tools-server.xiaoyaoji.cn/api/uptoken').then(res => {\r\n            resolve(res.uptoken)\r\n          })\r\n        },\r\n        upload_callback (response, file, fileList) {\r\n          console.log('callback', response, file, fileList)\r\n        }\r\n      },\r\n      widgetModels: {},\r\n      blank: '',\r\n      htmlTemplate: '',\r\n      vueTemplate: '',\r\n      jsonTemplate: '',\r\n      uploadEditor: null,\r\n      jsonCopyValue: '',\r\n      jsonClipboard: null,\r\n      jsonEg: `{\r\n  \"list\": [],\r\n  \"config\": {\r\n    \"labelWidth\": 20,\r\n    \"labelPosition\": \"left\",\r\n    \"size\": \"mini\"\r\n  }\r\n}`,\r\n      codeActiveName: 'vue',\r\n    }\r\n  },\r\n  mounted () {\r\n    this._loadComponents()\r\n  },\r\n  methods: {\r\n    _loadComponents () {\r\n      this.basicComponents = this.basicComponents.map(item => {\r\n        return {\r\n          ...item,\r\n          name: this.$t(`fm.components.fields.${item.type}`)\r\n        }\r\n      })\r\n      this.advanceComponents = this.advanceComponents.map(item => {\r\n        return {\r\n          ...item,\r\n          name: this.$t(`fm.components.fields.${item.type}`)\r\n        }\r\n      })\r\n      this.layoutComponents = this.layoutComponents.map(item => {\r\n        return {\r\n          ...item,\r\n          name: this.$t(`fm.components.fields.${item.type}`)\r\n        }\r\n      })\r\n    },\r\n    handleGoGithub () {\r\n      window.location.href = 'https://github.com/GavinZhuLei/vue-form-making'\r\n    },\r\n    handleConfigSelect (value) {\r\n      this.configTab = value\r\n    },\r\n    handleMoveEnd (evt) {\r\n      console.log('end', evt)\r\n    },\r\n    handleMoveStart ({oldIndex}) {\r\n      console.log('start', oldIndex, this.basicComponents)\r\n    },\r\n    handleMove () {\r\n      return true\r\n    },\r\n    handlePreview () {\r\n      console.log(this.widgetForm)\r\n      this.previewVisible = true\r\n    },\r\n    handleTest () {\r\n      this.$refs.generateForm.getData().then(data => {\r\n        this.$alert(data, '').catch(e=>{})\r\n        this.$refs.widgetPreview.end()\r\n      }).catch(e => {\r\n        this.$refs.widgetPreview.end()\r\n      })\r\n    },\r\n    handleReset () {\r\n      this.$refs.generateForm.reset()\r\n    },\r\n    handleGenerateJson () {\r\n      this.jsonVisible = true\r\n      this.jsonTemplate = this.widgetForm\r\n      console.log(JSON.stringify(this.widgetForm))\r\n      this.$nextTick(() => {\r\n\r\n        const editor = ace.edit('jsoneditor')\r\n        editor.session.setMode(\"ace/mode/json\")\r\n\r\n        if (!this.jsonClipboard) {\r\n          this.jsonClipboard = new Clipboard('.json-btn')\r\n          this.jsonClipboard.on('success', (e) => {\r\n            this.$message.success(this.$t('fm.message.copySuccess'))\r\n          })\r\n        }\r\n        this.jsonCopyValue = JSON.stringify(this.widgetForm)\r\n      })\r\n    },\r\n    handleGenerateCode () {\r\n\r\n      this.codeVisible = true\r\n      this.htmlTemplate = generateCode(JSON.stringify(this.widgetForm), 'html')\r\n      this.vueTemplate = generateCode(JSON.stringify(this.widgetForm), 'vue')\r\n      this.$nextTick(() => {\r\n        const editor = ace.edit('codeeditor')\r\n        editor.session.setMode(\"ace/mode/html\")\r\n\r\n        const vueeditor = ace.edit('vuecodeeditor')\r\n        vueeditor.session.setMode(\"ace/mode/html\")\r\n      })\r\n    },\r\n    handleUpload () {\r\n      this.uploadVisible = true\r\n      this.$nextTick(() => {\r\n        this.uploadEditor = ace.edit('uploadeditor')\r\n        this.uploadEditor.session.setMode(\"ace/mode/json\")\r\n      })\r\n    },\r\n    handleUploadJson () {\r\n      try {\r\n        this.setJSON(JSON.parse(this.uploadEditor.getValue()))\r\n        this.uploadVisible = false\r\n      } catch (e) {\r\n        this.$message.error(e.message)\r\n        this.$refs.uploadJson.end()\r\n      }\r\n    },\r\n    handleClear () {\r\n      this.widgetForm = {\r\n        list: [],\r\n        config: {\r\n          labelWidth: 100,\r\n          labelPosition: 'right',\r\n          size: 'small',\r\n          customClass: ''\r\n        },\r\n      }\r\n\r\n      this.widgetFormSelect = {}\r\n    },\r\n    clear () {\r\n      this.handleClear()\r\n    },\r\n    getJSON () {\r\n      return this.widgetForm\r\n    },\r\n    getHtml () {\r\n      return generateCode(JSON.stringify(this.widgetForm))\r\n    },\r\n    setJSON (json) {\r\n      this.widgetForm = json\r\n\r\n      if (json.list.length> 0) {\r\n        this.widgetFormSelect = json.list[0]\r\n      }\r\n    },\r\n    handleInput (val) {\r\n      console.log(val)\r\n      this.blank = val\r\n    },\r\n    handleDataChange (field, value, data) {\r\n      console.log(field, value, data)\r\n    }\r\n  },\r\n  watch: {\r\n    widgetForm: {\r\n      deep: true,\r\n      handler: function (val) {\r\n        console.log(this.$refs.widgetForm)\r\n      }\r\n    },\r\n    '$lang': function (val) {\r\n      this._loadComponents()\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["Container.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Container.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"fm-style\">\r\n    <el-container class=\"fm2-container\">\r\n      <el-main class=\"fm2-main\">\r\n        <el-container>\r\n          <el-aside width=\"250px\">\r\n            <div class=\"components-list\">\r\n              <template v-if=\"basicFields.length\">\r\n                <div class=\"widget-cate\">{{$t('fm.components.basic.title')}}</div>\r\n                <draggable tag=\"ul\" :list=\"basicComponents\" \r\n                  v-bind=\"{group:{ name:'people', pull:'clone', put:false}, sort:false, ghostClass: 'ghost'}\"\r\n                  @end=\"handleMoveEnd\"\r\n                  @start=\"handleMoveStart\"\r\n                  :move=\"handleMove\"\r\n                >\r\n                  <template v-for=\"(item, index) in basicComponents\">\r\n                    <li v-if=\"basicFields.indexOf(item.type)>=0\" class=\"form-edit-widget-label\" :class=\"{'no-put': item.type == 'divider'}\" :key=\"index\">\r\n                      <a>\r\n                        <i class=\"icon iconfont\" :class=\"item.icon\"></i>\r\n                        <span>{{item.name}}</span>\r\n                      </a>\r\n                    </li>\r\n                  </template>                \r\n                </draggable>\r\n              </template>            \r\n              <template v-if=\"advanceFields.length\">\r\n                <div class=\"widget-cate\">{{$t('fm.components.advance.title')}}</div>\r\n                <draggable tag=\"ul\" :list=\"advanceComponents\" \r\n                  v-bind=\"{group:{ name:'people', pull:'clone',put:false},sort:false, ghostClass: 'ghost'}\"\r\n                  @end=\"handleMoveEnd\"\r\n                  @start=\"handleMoveStart\"\r\n                  :move=\"handleMove\"\r\n                >\r\n                  <template v-for=\"(item, index) in advanceComponents\">\r\n                    <li v-if=\"advanceFields.indexOf(item.type) >= 0\" class=\"form-edit-widget-label\" :class=\"{'no-put': item.type == 'table'}\" :key=\"index\">\r\n                      <a>\r\n                        <i class=\"icon iconfont\" :class=\"item.icon\"></i>\r\n                        <span>{{item.name}}</span>\r\n                      </a>\r\n                    </li>                  \r\n                  </template>\r\n                </draggable>\r\n              </template>\r\n\r\n              \r\n              <template v-if=\"layoutFields.length\">\r\n                <div class=\"widget-cate\">{{$t('fm.components.layout.title')}}</div>\r\n                <draggable tag=\"ul\" :list=\"layoutComponents\" \r\n                  v-bind=\"{group:{ name:'people', pull:'clone',put:false},sort:false, ghostClass: 'ghost'}\"\r\n                  @end=\"handleMoveEnd\"\r\n                  @start=\"handleMoveStart\"\r\n                  :move=\"handleMove\"\r\n                >\r\n                  <template v-for=\"(item, index) in layoutComponents\">\r\n                    <li v-if=\"layoutFields.indexOf(item.type) >=0\" class=\"form-edit-widget-label no-put\" :key=\"index\">\r\n                      <a>\r\n                        <i class=\"icon iconfont\" :class=\"item.icon\"></i>\r\n                        <span>{{item.name}}</span>\r\n                      </a>\r\n                    </li>\r\n                  </template>               \r\n                </draggable>\r\n              </template>\r\n              \r\n            </div>\r\n            \r\n          </el-aside>\r\n          \r\n          <el-container class=\"center-container\" direction=\"vertical\">\r\n            <el-header class=\"btn-bar\" style=\"height: 45px;\">\r\n              <slot name=\"action\">\r\n              </slot>\r\n              <el-button v-if=\"upload\" type=\"text\" size=\"medium\" icon=\"el-icon-upload2\" @click=\"handleUpload\">{{$t('fm.actions.import')}}</el-button>\r\n              <el-button v-if=\"clearable\" type=\"text\" size=\"medium\" icon=\"el-icon-delete\" @click=\"handleClear\">{{$t('fm.actions.clear')}}</el-button>\r\n              <el-button v-if=\"preview\" type=\"text\" size=\"medium\" icon=\"el-icon-view\" @click=\"handlePreview\">{{$t('fm.actions.preview')}}</el-button>\r\n              <el-button v-if=\"generateJson\" type=\"text\" size=\"medium\" icon=\"el-icon-tickets\" @click=\"handleGenerateJson\">{{$t('fm.actions.json')}}</el-button>\r\n              <el-button v-if=\"generateCode\" type=\"text\" size=\"medium\" icon=\"el-icon-document\" @click=\"handleGenerateCode\">{{$t('fm.actions.code')}}</el-button>\r\n            </el-header>\r\n            <el-main :class=\"{'widget-empty': widgetForm.list.length == 0}\">\r\n              \r\n              <widget-form v-if=\"!resetJson\"  ref=\"widgetForm\" :data=\"widgetForm\" :select.sync=\"widgetFormSelect\"></widget-form>\r\n            </el-main>\r\n          </el-container>\r\n          \r\n          <el-aside class=\"widget-config-container\">\r\n            <el-container>\r\n              <el-header height=\"45px\">\r\n                <div class=\"config-tab\" :class=\"{active: configTab=='widget'}\" @click=\"handleConfigSelect('widget')\">{{$t('fm.config.widget.title')}}</div>\r\n                <!-- <div class=\"config-tab\" :class=\"{active: configTab=='form'}\" @click=\"handleConfigSelect('form')\">{{$t('fm.config.form.title')}}</div> -->\r\n              </el-header>\r\n              <el-main class=\"config-content\">\r\n                <widget-config v-show=\"configTab=='widget'\" :data=\"widgetFormSelect\"></widget-config>\r\n                <!-- <form-config v-show=\"configTab=='form'\" :data=\"widgetForm.config\"></form-config> -->\r\n              </el-main>\r\n            </el-container>\r\n            \r\n          </el-aside>\r\n\r\n          <cus-dialog\r\n            :visible=\"previewVisible\"\r\n            @on-close=\"previewVisible = false\"\r\n            ref=\"widgetPreview\"\r\n            width=\"1000px\"\r\n            form\r\n          >\r\n            <generate-form insite=\"true\" @on-change=\"handleDataChange\" v-if=\"previewVisible\" :data=\"widgetForm\" :value=\"widgetModels\" :remote=\"remoteFuncs\" ref=\"generateForm\">\r\n\r\n              <template v-slot:blank=\"scope\">\r\n                Width <el-input v-model=\"scope.model.blank.width\" style=\"width: 100px\"></el-input>\r\n                Height <el-input v-model=\"scope.model.blank.height\" style=\"width: 100px\"></el-input>\r\n              </template>\r\n            </generate-form>\r\n\r\n            <template slot=\"action\">\r\n              <el-button type=\"primary\" @click=\"handleTest\">{{$t('fm.actions.getData')}}</el-button>\r\n              <el-button @click=\"handleReset\">{{$t('fm.actions.reset')}}</el-button>\r\n            </template>\r\n          </cus-dialog>\r\n\r\n          <cus-dialog\r\n            :visible=\"uploadVisible\"\r\n            @on-close=\"uploadVisible = false\"\r\n            @on-submit=\"handleUploadJson\"\r\n            ref=\"uploadJson\"\r\n            width=\"800px\"\r\n            form\r\n          >\r\n            <el-alert type=\"info\" :title=\"$t('fm.description.uploadJsonInfo')\"></el-alert>\r\n            <div id=\"uploadeditor\" style=\"height: 400px;width: 100%;\">{{jsonEg}}</div>\r\n          </cus-dialog>\r\n\r\n          <cus-dialog\r\n            :visible=\"jsonVisible\"\r\n            @on-close=\"jsonVisible = false\"\r\n            ref=\"jsonPreview\"\r\n            width=\"800px\"\r\n            form\r\n          >\r\n            \r\n            <div id=\"jsoneditor\" style=\"height: 400px;width: 100%;\">{{jsonTemplate}}</div>\r\n            \r\n            <template slot=\"action\">\r\n              <el-button type=\"primary\" class=\"json-btn\" :data-clipboard-text=\"jsonCopyValue\">{{$t('fm.actions.copyData')}}</el-button>\r\n            </template>\r\n          </cus-dialog>\r\n\r\n          <cus-dialog\r\n            :visible=\"codeVisible\"\r\n            @on-close=\"codeVisible = false\"\r\n            ref=\"codePreview\"\r\n            width=\"800px\"\r\n            form\r\n            :action=\"false\"\r\n          >\r\n            <!-- <div id=\"codeeditor\" style=\"height: 500px; width: 100%;\">{{htmlTemplate}}</div> -->\r\n            <el-tabs type=\"border-card\" style=\"box-shadow: none;\" v-model=\"codeActiveName\">\r\n              <el-tab-pane label=\"Vue Component\" name=\"vue\">\r\n                <div id=\"vuecodeeditor\" style=\"height: 500px; width: 100%;\">{{vueTemplate}}</div>\r\n              </el-tab-pane>\r\n              <el-tab-pane label=\"HTML\" name=\"html\">\r\n                <div id=\"codeeditor\" style=\"height: 500px; width: 100%;\">{{htmlTemplate}}</div>\r\n              </el-tab-pane>\r\n            </el-tabs>\r\n          </cus-dialog>\r\n        </el-container>\r\n      </el-main>\r\n      <el-footer height=\"30px\" style=\"font-weight: 600;\">Powered by <a target=\"_blank\" href=\"https://www.reddotdigitalit.com/\">Red.Digital Limited</a></el-footer>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Draggable from 'vuedraggable'\r\nimport WidgetConfig from './WidgetConfig'\r\nimport FormConfig from './FormConfig'\r\nimport WidgetForm from './WidgetForm'\r\nimport CusDialog from './CusDialog'\r\nimport GenerateForm from './GenerateForm'\r\nimport Clipboard from 'clipboard'\r\nimport {basicComponents, layoutComponents, advanceComponents} from './componentsConfig.js'\r\nimport {loadJs, loadCss} from '../util/index.js'\r\nimport request from '../util/request.js'\r\nimport generateCode from './generateCode.js'\r\n\r\nexport default {\r\n  name: 'fm-making-form',\r\n  components: {\r\n    Draggable,\r\n    WidgetConfig,\r\n    FormConfig,\r\n    WidgetForm,\r\n    CusDialog,\r\n    GenerateForm\r\n  },\r\n  props: {\r\n    preview: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    generateCode: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    generateJson: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    upload: {\r\n      type: Boolean, \r\n      default: false\r\n    },\r\n    clearable: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    basicFields: {\r\n      type: Array,\r\n      default: () => ['input', 'textarea', 'number', 'radio', 'checkbox', 'time', 'date',\r\n                      'color', 'select', 'switch', 'text', 'nps', 'mcqSingle', 'mcqMultiple',\r\n                      'rating', 'matrix', 'yesno', 'openEnded', 'slider', 'matrixDynamic']\r\n    },\r\n    advanceFields: {\r\n      type: Array,\r\n      default: () => ['blank', 'imgupload', 'editor', 'cascader']\r\n    },\r\n    layoutFields: {\r\n      type: Array,\r\n      default: () => ['grid']\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      basicComponents,\r\n      layoutComponents,\r\n      advanceComponents,\r\n      resetJson: false,\r\n      widgetForm: {\r\n        list: [],\r\n        // config: {\r\n        //   labelWidth: 100,\r\n        //   labelPosition: 'right',\r\n        //   size: 'small'\r\n        // },\r\n        config: {\r\n          labelWidth: 20,\r\n          labelPosition: 'left',\r\n          size: 'mini'\r\n        },\r\n      },\r\n      configTab: 'widget',\r\n      widgetFormSelect: null,\r\n      previewVisible: false,\r\n      jsonVisible: false,\r\n      codeVisible: false,\r\n      uploadVisible: false,\r\n      remoteFuncs: {\r\n        func_test (resolve) {\r\n          setTimeout(() => {\r\n            const options = [\r\n              {id: '1', name: '1111'},\r\n              {id: '2', name: '2222'},\r\n              {id: '3', name: '3333'}\r\n            ]\r\n\r\n            resolve(options)\r\n          }, 2000)\r\n        },\r\n        funcGetToken (resolve) {\r\n          request.get('http://tools-server.xiaoyaoji.cn/api/uptoken').then(res => {\r\n            resolve(res.uptoken)\r\n          })\r\n        },\r\n        upload_callback (response, file, fileList) {\r\n          console.log('callback', response, file, fileList)\r\n        }\r\n      },\r\n      widgetModels: {},\r\n      blank: '',\r\n      htmlTemplate: '',\r\n      vueTemplate: '',\r\n      jsonTemplate: '',\r\n      uploadEditor: null,\r\n      jsonCopyValue: '',\r\n      jsonClipboard: null,\r\n      jsonEg: `{\r\n  \"list\": [],\r\n  \"config\": {\r\n    \"labelWidth\": 20,\r\n    \"labelPosition\": \"left\",\r\n    \"size\": \"mini\"\r\n  }\r\n}`,\r\n      codeActiveName: 'vue',\r\n    }\r\n  },\r\n  mounted () {\r\n    this._loadComponents()\r\n  },\r\n  methods: {\r\n    _loadComponents () {\r\n      this.basicComponents = this.basicComponents.map(item => {\r\n        return {\r\n          ...item,\r\n          name: this.$t(`fm.components.fields.${item.type}`)\r\n        }\r\n      })\r\n      this.advanceComponents = this.advanceComponents.map(item => {\r\n        return {\r\n          ...item,\r\n          name: this.$t(`fm.components.fields.${item.type}`)\r\n        }\r\n      })\r\n      this.layoutComponents = this.layoutComponents.map(item => {\r\n        return {\r\n          ...item,\r\n          name: this.$t(`fm.components.fields.${item.type}`)\r\n        }\r\n      })\r\n    },\r\n    handleGoGithub () {\r\n      window.location.href = 'https://github.com/GavinZhuLei/vue-form-making'\r\n    },\r\n    handleConfigSelect (value) {\r\n      this.configTab = value\r\n    },\r\n    handleMoveEnd (evt) {\r\n      console.log('end', evt)\r\n    },\r\n    handleMoveStart ({oldIndex}) {\r\n      console.log('start', oldIndex, this.basicComponents)\r\n    },\r\n    handleMove () {\r\n      return true\r\n    },\r\n    handlePreview () {\r\n      console.log(this.widgetForm)\r\n      this.previewVisible = true\r\n    },\r\n    handleTest () {\r\n      this.$refs.generateForm.getData().then(data => {\r\n        this.$alert(data, '').catch(e=>{})\r\n        this.$refs.widgetPreview.end()\r\n      }).catch(e => {\r\n        this.$refs.widgetPreview.end()\r\n      })\r\n    },\r\n    handleReset () {\r\n      this.$refs.generateForm.reset()\r\n    },\r\n    handleGenerateJson () {\r\n      this.jsonVisible = true\r\n      this.jsonTemplate = this.widgetForm\r\n      console.log(JSON.stringify(this.widgetForm))\r\n      this.$nextTick(() => {\r\n\r\n        const editor = ace.edit('jsoneditor')\r\n        editor.session.setMode(\"ace/mode/json\")\r\n\r\n        if (!this.jsonClipboard) {\r\n          this.jsonClipboard = new Clipboard('.json-btn')\r\n          this.jsonClipboard.on('success', (e) => {\r\n            this.$message.success(this.$t('fm.message.copySuccess'))\r\n          })\r\n        }\r\n        this.jsonCopyValue = JSON.stringify(this.widgetForm)\r\n      })\r\n    },\r\n    handleGenerateCode () {\r\n\r\n      this.codeVisible = true\r\n      this.htmlTemplate = generateCode(JSON.stringify(this.widgetForm), 'html')\r\n      this.vueTemplate = generateCode(JSON.stringify(this.widgetForm), 'vue')\r\n      this.$nextTick(() => {\r\n        const editor = ace.edit('codeeditor')\r\n        editor.session.setMode(\"ace/mode/html\")\r\n\r\n        const vueeditor = ace.edit('vuecodeeditor')\r\n        vueeditor.session.setMode(\"ace/mode/html\")\r\n      })\r\n    },\r\n    handleUpload () {\r\n      this.uploadVisible = true\r\n      this.$nextTick(() => {\r\n        this.uploadEditor = ace.edit('uploadeditor')\r\n        this.uploadEditor.session.setMode(\"ace/mode/json\")\r\n      })\r\n    },\r\n    handleUploadJson () {\r\n      try {\r\n        this.setJSON(JSON.parse(this.uploadEditor.getValue()))\r\n        this.uploadVisible = false\r\n      } catch (e) {\r\n        this.$message.error(e.message)\r\n        this.$refs.uploadJson.end()\r\n      }\r\n    },\r\n    handleClear () {\r\n      this.widgetForm = {\r\n        list: [],\r\n        config: {\r\n          labelWidth: 100,\r\n          labelPosition: 'right',\r\n          size: 'small',\r\n          customClass: ''\r\n        },\r\n      }\r\n\r\n      this.widgetFormSelect = {}\r\n    },\r\n    clear () {\r\n      this.handleClear()\r\n    },\r\n    getJSON () {\r\n      return this.widgetForm\r\n    },\r\n    getHtml () {\r\n      return generateCode(JSON.stringify(this.widgetForm))\r\n    },\r\n    setJSON (json) {\r\n      this.widgetForm = json\r\n\r\n      if (json.list.length> 0) {\r\n        this.widgetFormSelect = json.list[0]\r\n      }\r\n    },\r\n    handleInput (val) {\r\n      console.log(val)\r\n      this.blank = val\r\n    },\r\n    handleDataChange (field, value, data) {\r\n      console.log(field, value, data)\r\n    }\r\n  },\r\n  watch: {\r\n    widgetForm: {\r\n      deep: true,\r\n      handler: function (val) {\r\n        console.log(this.$refs.widgetForm)\r\n      }\r\n    },\r\n    '$lang': function (val) {\r\n      this._loadComponents()\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}